{"version":3,"sources":["Components/ChartModel.js","Components/ChartOption.js","Components/ChartView.js","App.js","serviceWorker.js","index.js"],"names":["parseQuery","query","toString","replace","result","split","forEach","part","trim","parts","attr","decodeURIComponent","length","f","parseFloat","normalizeConfig","config","lines","l","_ids","ids","colors","_colors","names","_names","units","_units","i","push","id","offset","name","aggregate","color","thickness","strokeWidth","shadowsize","min","max","unit","aggregateType","aggregateSpan","relativeEnd","j","art","instance","yOffset","validTime","chartType","m","marks","lineId","upperValueOrId","v","lowerValueOrId","vl","c","fill","ol","t","os","s","text","d","textPosition","p","textOffset","py","textColor","fc","textSize","fs","width","height","timeFormat","useComma","zoom","export","grid_hideX","grid_hideY","hoverDetail","noLoader","noedit","animation","parseInt","afterComma","undefined","timeType","NOT_CONNECTED","ChartModel","socket","options","Object","assign","updateTimeout","this","serverSide","seriesData","actualValues","ticks","liveInterval","reading","navOptions","subscribes","sessionId","updateInterval","presetSubscribed","defaultHistory","onUpdateFunc","onReadingFunc","onErrorFunc","objectPromises","debug","zoomData","lastHash","window","location","hash","onHashInstalled","onHashChangeBound","onHashChange","bind","addEventListener","onPresetUpdateBound","onPresetUpdate","onStateChangeBound","onStateChange","getSystemConfig","catch","e","console","error","then","systemConfig","common","analyseAndLoadConfig","preset","search","hQuery","data","JSON","parse","range","_config","clearInterval","startsWith","includes","getObject","obj","native","type","stringify","isFloatComma","lang","language","live","presetId","readData","unsubscribeObject","subscribeObject","stopLive","setInterval","presetUpdateTimeout","clearTimeout","setTimeout","newConfig","log","Date","toISOString","readOnZoomTimeout","subscribed","unsubscribeState","removeEventListener","cb","index","step","end","start","_now","option","monthRange","a","addTime","now","minusMonth","setMonth","getMonth","Math","floor","getTime","ignoreNull","count","from","ack","q","addID","startTime","endTime","start_time","map","Number","end_time","setHours","indexOf","minutes","setMinutes","getMinutes","setSeconds","setMilliseconds","hours","getHours","setDate","getDate","getDay","setFullYear","getFullYear","getStartStop","getHistoryEx","res","warn","values","_series","val","value","ts","unshift","exact","last","sort","b","Promise","resolve","err","legActual","getState","state","subscribeState","_readObject","en","readOneChart","_readOneLine","_readData","splice","upperValue","lowerValue","readMarkings","subscribeAll","changed","time","plusOrMinus","isOffsetInMinutes","readTicks","_ticks","THEMES","azul","infographic","vintage","dark","macarons","shine","roma","royal","red","green","light","gray","padding2","num","brighterColor","amt","usePound","rgb","match","rgba2hex","slice","r","g","Gradient","colorStops","prototype","constructor","addColorStop","LinearGradient","x","y","x2","y2","globalCoord","global","call","clazz","baseClazz","clazzPrototype","F","prop","hasOwnProperty","superClass","zrUtilInherits","ChartOption","moment","themeType","calcTextWidth","compact","Error","chart","yAxis","isTouch","document","documentElement","lastFormattedTime","yAxisIndex","xMin","xMax","theme","colorCount","oneLine","dashes","_color","commonYAxis","cfg","clip","xAxisIndex","silent","showSymbol","points","smooth","convertData","itemStyle","symbolSize","symbol","emphasis","scale","focus","blurScope","lineStyle","shadowBlur","shadowOffsetY","shadowColor","areaStyle","opacity","splitLine","show","xaxe","grid_color","splitNumber","xticks","position","axisTick","alignWithLabel","x_ticks_color","axisLabel","formatter","_index","xFormatter","fontSize","x_labels_size","x_labels_color","rich","fontWeight","series","yMin","yMax","diff","isNaN","ceil","yaxe","yticks","yFormatter","y_labels_color","y_labels_size","y_ticks_color","oneMark","lowerLimitFloat","upperLimitFloat","isLowerNumber","isUpperNumber","markArea","borderWidth","limitFloat","markLine","label","param","distance","textStyle","fontStyle","line","withUnit","interpolated","ignoreWidth","toFixed","round","withSeconds","withTime","isTop","date","format","dateTxt","dateInMonth","showDate","getSeconds","hoverNoNulls","k","y1","params","find","seriesIndex","getInterpolatedValue","hoverNoInterpolate","filter","join","legend","left","padLeft","right","padRight","top","padTop","bottom","padBottom","backgroundColor","legBg","arg","legColor","legFontSize","orient","legendDirection","selected","hide","title","titlePos","titleSize","titleColor","textVerticalAlign","textAlign","useCanvas","getSeries","getYAxis","xAxis","getXAxis","noAnimation","grid","bg_custom","isXLabelHasBreak","tooltip","trigger","renderTooltip","hoverAnimation","axisPointer","getMarkings","ser","cY","minTick","maxTick","wMin","wMax","getLegend","getTitle","axis","echarts","GridComponent","ToolboxComponent","TitleComponent","LegendComponent","DataZoomComponent","TimelineComponent","MarkLineComponent","MarkAreaComponent","TooltipComponent","LineChart","ScatterChart","SVGRenderer","CanvasRenderer","canvasCalcTextWidth","fontFamily","context","createElement","getContext","font","metrics","measureText","String","padStart","targetLength","padString","repeat","ChartView","props","updateProperties","updatePropertiesTimeout","echartsReact","getEchartsInstance","chartInstance","lastIds","item","clear","chartOption","getOption","applySelected","setOption","onResize","timerResize","componentDidUpdate","onMouseMove","mouseDown","divResetButton","current","style","display","getHelperChartData","moved","lastX","offsetX","chartWidth","shift","setNewRange","onMouseDown","zr","_mousemove","on","onRangeChange","onMouseUp","off","onMouseWheel","pos","move","wheelDelta","updateDataTimer","onTouchStart","touches","originalEvent","preventDefault","stopImmediatePropagation","pageX","lastWidth","abs","onTouchEnd","onTouchMove","fingerWidth","amount","chartHeight","paddings","React","createRef","divRef","locale","I18n","getLanguage","updateChart","getZr","items","getElementsByClassName","div","_iobInstalled","keys","ref","notMerge","lazyUpdate","opts","renderer","onEvents","legendselectchanged","rendered","installEventHandlers","LinearProgress","noBorder","border_width","borderPadding","border_padding","offsetHeight","offsetWidth","setState","Fab","size","className","classes","resetButton","onClick","resetButtonIcon","exportColor","exportButton","base64","getDataURL","pixelRatio","window_bg","downloadLink","body","appendChild","href","target","download","click","alert","forceUpdate","background","noBackground","borderColor","border_color","borderStyle","border_style","padding","renderExportButton","renderResetButton","renderChart","Component","withWidth","withStyles","maxHeight","maxWidth","overflow","zIndex","cursor","paddingTop","App","onReceiveMessage","message","chartData","setConfig","createChartData","themeInstance","createTheme","Utils","queryHash","connected","themeName","getThemeName","getThemeType","noBG","inEdit","edit","progressRef","progressShown","translations","require","ownTranslations","setTranslations","isIFrame","self","Connection","adapterName","onProgress","progress","PROGRESS","CONNECTING","READY","restoreAfterReconnection","onReady","objects","scripts","setLanguage","systemLang","parent","postMessage","ERRORS","showError","onError","onReading","showProgress","onUpdate","newState","dataLoaded","isShow","destroy","palette","errorText","onClose","prevProps","prevState","snapshot","getConfig","MD5","root","default","primary","renderError","withTheme","Boolean","hostname","version","host","Sentry","dsn","release","integrations","SentryIntegrations","beforeSend","event","hint","ignore","exception","build","ReactDOM","render","onThemeChange","_theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.339b9faf.chunk.js","sourcesContent":["/**\n * Parse a query string into its parts.\n * Copied from @iobroker/adapter-react/Components/Utils\n * @param {string} query\n * @returns {Record<string, string | boolean | number>}\n */\nfunction parseQuery(query) {\n    query = (query || '').toString().replace(/^\\?/, '');\n    /** @type {Record<string, string | boolean | number>} */\n    const result = {};\n    query.split('&').forEach(part => {\n        part = part.trim();\n        if (part) {\n            const parts = part.split('=');\n            const attr = decodeURIComponent(parts[0]).trim();\n            if (parts.length > 1) {\n                result[attr] = decodeURIComponent(parts[1]);\n                if (result[attr] === 'true') {\n                    result[attr] = true;\n                } else if (result[attr] === 'false') {\n                    result[attr] = false;\n                } else {\n                    const f = parseFloat(result[attr]);\n                    if (f.toString() === result[attr]) {\n                        result[attr] = f;\n                    }\n                }\n            } else {\n                result[attr] = true;\n            }\n        }\n    });\n    return result;\n}\n\n/*\nfunction deParam(params, coerce) {\n    const obj = {};\n    const coerceTypes = {'true': true, 'false': false, 'null': null};\n\n    // Iterate over all name=value pairs.\n    params.replace(/\\+/g, ' ').split('&').forEach(v => {\n        const param = v.split('=');\n        let key = decodeURIComponent(param[0]);\n        let val;\n        let i = 0;\n\n        // If key is more complex than 'foo', like 'a[]' or 'a[b][c]', split it\n        // into its component parts.\n        let keys = key.split('][');\n        let keysLast = keys.length - 1;\n\n        // If the first keys part contains [ and the last ends with ], then []\n        // are correctly balanced.\n        if (/\\[/.test(keys[0]) && /]$/.test(keys[keysLast])) {\n            // Remove the trailing ] from the last keys part.\n            keys[keysLast] = keys[keysLast].replace(/]$/, '');\n\n            // Split first keys part into two parts on the [ and add them back onto\n            // the beginning of the keys array.\n            keys = keys.shift().split('[').concat(keys);\n\n            keysLast = keys.length - 1;\n        } else {\n            // Basic 'foo' style key.\n            keysLast = 0;\n        }\n\n        // Are we dealing with a name=value pair, or just a name?\n        if (param.length === 2) {\n            val = decodeURIComponent(param[1]);\n\n            // Coerce values.\n            if (coerce) {\n                val = val && !isNaN(val) && ((+val + '') === val) ? +val        // number\n                    : val === 'undefined' ? undefined         // undefined\n                        : coerceTypes[val] !== undefined ? coerceTypes[val] // true, false, null\n                            : val;                                                          // string\n            }\n\n            if (keysLast) {\n                let cur = obj;\n                // Complex key, build deep object structure based on a few rules:\n                // * The 'cur' pointer starts at the object top-level.\n                // * [] = array push (n is set to array length), [n] = array if n is\n                //   numeric, otherwise object.\n                // * If at the last keys part, set the value.\n                // * For each keys part, if the current level is undefined create an\n                //   object or array based on the type of the next keys part.\n                // * Move the 'cur' pointer to the next level.\n                // * Rinse & repeat.\n                for (; i <= keysLast; i++) {\n                    key = keys[i] === '' ? cur.length : keys[i];\n                    cur = cur[key] = i < keysLast\n                        ? cur[key] || (keys[i + 1] && isNaN(keys[i + 1]) ? {} : [])\n                        : val;\n                }\n\n            } else {\n                // Simple key, even simpler rules, since only scalars and shallow\n                // arrays are allowed.\n\n                if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n                    // val is already an array, so push on the next value.\n                    obj[key].push(val);\n                } else if ({}.hasOwnProperty.call(obj, key)) {\n                    // val isn't an array, but since a second value has been specified,\n                    // convert val into an array.\n                    obj[key] = [obj[key], val];\n                } else {\n                    // val is a scalar.\n                    obj[key] = val;\n                }\n            }\n        } else if (key) {\n            // No value was defined, so set something meaningful.\n            obj[key] = coerce\n                ? undefined\n                : '';\n        }\n    });\n\n    return obj;\n}\n*/\n// Do not forget to change normalizeConfig in src/utils/flotConverter.js too\nfunction normalizeConfig(config) {\n    if (config.lines) {\n        config.l = config.lines;\n        delete config.lines;\n    }\n\n    if (config._ids) {\n        const ids    = config._ids    ? config._ids.split(';')    : [];\n        const colors = config._colors ? config._colors.split(';') : [];\n        const names  = config._names  ? config._names.split(';')  : [];\n        const units  = config._units  ? config._units.split(';')  : [];\n        config.l = [];\n        for (let i = 0; i < ids.length; i++) {\n            config.l.push({\n                id:         ids[i],\n                offset:     0,\n                name:       names[i] || '',\n                aggregate:  'onchange',\n                color:      colors[i] || 'blue',\n                thickness:  config.strokeWidth || 1,\n                shadowsize: config.strokeWidth || 1,\n                min:        config.min || '',\n                max:        config.max || '',\n                unit:       units[i]   || ''\n            });\n        }\n        config.aggregateType = 'step';\n        config.aggregateSpan = 300;\n        config.relativeEnd   = 'now';\n    }\n\n    // convert art to aggregate (from flot)\n    if (config.l) {\n        for (let j = 0; j < config.l.length; j++) {\n            if (config.l[j].art) {\n                config.l[j].aggregate = config.l[j].art;\n                delete config.l[j].art;\n            }\n            if (config.instance && !config.l[j].instance) {\n                config.l[j].instance = config.instance;\n            }\n            config.l[j].yOffset   = parseFloat(config.l[j].yOffset)   || 0;\n            config.l[j].offset    = parseFloat(config.l[j].offset)    || 0;\n            config.l[j].validTime = parseFloat(config.l[j].validTime) || 0;\n            config.l[j].chartType = config.l[j].chartType || config.chartType || 'auto';\n        }\n    }\n\n    config.l = config.l || [];\n\n    // convert marks\n    if (config.m) {\n        config.marks = [];\n        for (let j = 0; j < config.m.length; j++) {\n            config.marks[j] = {\n                lineId:         config.m[j].l,\n                upperValueOrId: config.m[j].v,\n                lowerValueOrId: config.m[j].vl,\n                color:          config.m[j].c,\n                fill:           config.m[j].f,\n                ol:             config.m[j].t,\n                os:             config.m[j].s,\n                text:           config.m[j].d,\n                textPosition:   config.m[j].p,\n                textOffset:     config.m[j].py,\n                textColor:      config.m[j].fc,\n                textSize:       config.m[j].fs,\n            };\n        }\n        delete config.m;\n    }\n\n    config.marks = config.marks || [];\n\n    if (!config.l.length) {\n        config.l.push({id: '', unit: ''});\n    }\n\n    // Set default values\n    config.width        = config.width                   || '100%';\n    config.height       = config.height                  || '100%';\n    config.timeFormat   = config.timeFormat              || '';\n    config.useComma     = config.useComma    === 'true'  || config.useComma    === true;\n    config.zoom         = config.zoom        === 'true'  || config.zoom        === true;\n    config.export       = config.export      === 'true'  || config.export      === true;\n    config.grid_hideX   = config.grid_hideX  === 'true'  || config.grid_hideX  === true;\n    config.grid_hideY   = config.grid_hideY  === 'true'  || config.grid_hideY  === true;\n    config.hoverDetail  = config.hoverDetail === 'true'  || config.hoverDetail === true;\n    config.noLoader     = config.noLoader    === 'true'  || config.noLoader    === true;\n    config.noedit       = config.noedit      === 'true'  || config.noedit      === true;\n    config.animation    = parseInt(config.animation)     || 0;\n    config.afterComma   = config.afterComma === undefined ? 2 : parseInt(config.afterComma, 10);\n    config.timeType     = config.timeType || 'relative';\n\n    return config;\n}\n\nconst NOT_CONNECTED = 'notConnectedError';\n\nclass ChartModel {\n    constructor(socket, config, options) {\n        options = Object.assign({updateTimeout: 300}, options || {});\n        this.socket = socket;\n\n        this.updateTimeout    = options.updateTimeout || 300; // how often the new data will be requested by zoom and pan\n        this.serverSide       = options.serverSide || false; // if rendering is serverside\n\n        this.seriesData       = [];\n        this.actualValues     = []; // only if config.legActual === true\n        this.ticks            = null;\n        this.liveInterval     = null;\n        this.reading          = false;\n\n        this.navOptions       = {};\n\n        this.subscribes       = [];\n        //this.subscribed       = false;\n        this.sessionId        = 1;\n        this.updateInterval   = null; // update interval by time\n        this.presetSubscribed = false; // Is preset subscribed yet or not\n\n        this.defaultHistory   = '';\n\n        this.onUpdateFunc     = null;\n        this.onReadingFunc    = null;\n        this.onErrorFunc      = null;\n        this.objectPromises   = {};\n        this.debug            = false;\n        this.zoomData         = null;\n\n        if (!this.serverSide) {\n            this.lastHash         = window.location.hash;\n\n            if (!config) {\n                this.onHashInstalled = true;\n                this.onHashChangeBound = this.onHashChange.bind(this);\n                window.addEventListener('hashchange', this.onHashChangeBound, false);\n            }\n            this.onPresetUpdateBound = this.onPresetUpdate.bind(this);\n        } // else node.js\n\n        this.onStateChangeBound = this.onStateChange.bind(this);\n\n        this.socket.getSystemConfig()\n            .catch(e => {\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                console.error('Cannot read systemConfig: ' + e);\n                return null;\n            })\n            .then(systemConfig => {\n                this.systemConfig = systemConfig && systemConfig.common ? systemConfig.common : {};\n                this.defaultHistory = this.systemConfig.defaultHistory;\n                return this.analyseAndLoadConfig(config);\n            })\n    }\n\n    analyseAndLoadConfig(config) {\n        if (config) {\n            if (typeof config === 'string') {\n                this.preset = config;\n            } else {\n                this.config = normalizeConfig(config);\n            }\n        } else if (!this.serverSide) {\n            const query = parseQuery(window.location.search); // Utils.parseQuery\n\n            this.debug = query.debug === true || query.debug === 'true' || query.debug === 1 || query.debug === '1';\n\n            if (query.preset && typeof query.preset === 'string') {\n                this.preset = query.preset;\n            } else {\n                const hQuery = parseQuery((window.location.hash || '').toString().replace(/^#/, '')); // Utils.parseQuery\n                if (hQuery.data) {\n                    try {\n                        hQuery.data = JSON.parse(hQuery.data);\n                    } catch (e) {\n                        hQuery.data = {};\n                    }\n                }\n                if (query.data) {\n                    try {\n                        query.data = JSON.parse(query.data);\n                    } catch (e) {\n                        query.data = {};\n                    }\n                }\n                if (hQuery.preset) {\n                    this.preset = hQuery.preset;\n                    if (hQuery.range || hQuery.relativeEnd) {\n                        this.hash = {\n                            range: hQuery.range,\n                            relativeEnd: hQuery.relativeEnd\n                        };\n                    }\n                } else {\n                    // search ID and range\n                    const _config = Object.assign(query.data || {}, hQuery.data || {}, true);\n                    if (hQuery.noLoader !== undefined) {\n                        _config.noLoader = hQuery.noLoader === true || hQuery.noLoader === 'true' || hQuery.noLoader === 1 || hQuery.noLoader === '1';\n                    }\n                    if (query.noLoader !== undefined) {\n                        _config.noLoader = query.noLoader === true || query.noLoader === 'true' || query.noLoader === 1 || query.noLoader === '1';\n                    }\n                    this.config = normalizeConfig(_config);\n                    //console.log(this.config);\n                }\n            }\n        }\n\n        this.seriesData = [];\n\n        if (this.updateInterval) {\n            clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n\n        if (this.preset) {\n            if ((!this.preset.startsWith('echarts.') && !this.preset.startsWith('flot.')) || !this.preset.includes('.')) {\n                this.preset = 'echarts.0.' + this.preset;\n            }\n\n            this.socket.getObject(this.preset)\n                .then(obj => {\n                    if (!obj || !obj.native || !obj.native.data || obj.type !== 'chart') {\n                        return console.error(`[ChartModel] Invalid object ${this.preset}: ${JSON.stringify(obj)}`);\n                    }\n                    this.config          = normalizeConfig(obj.native.data);\n                    this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\n                    this.config.lang     = this.systemConfig.language;\n                    this.config.live     = parseInt(this.config.live, 10) || 0;\n                    this.config.debug    = this.debug;\n                    this.config.presetId = this.preset;\n\n                    if (this.hash && this.hash.range) {\n                        this.config.range = this.hash.range;\n                    }\n                    if (this.hash && this.hash.relativeEnd) {\n                        this.config.relativeEnd = this.hash.relativeEnd;\n                    }\n\n                    this.readData();\n\n                    // subscribe on preset changes\n                    if (!this.serverSide && this.presetSubscribed !== this.preset) {\n                        this.presetSubscribed && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\n                        this.presetSubscribed = this.preset;\n                        this.socket.subscribeObject(this.preset, this.onPresetUpdateBound);\n                    }\n                    if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\n                    }\n                })\n                .catch(e => {\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                    console.error(`Cannot read ${this.preset}: ${e}`);\n                });\n\n        } else {\n            this.config.useComma = this.config.useComma === undefined ? this.systemConfig.isFloatComma === true || this.systemConfig.isFloatComma === 'true' : this.config.useComma === 'true' || this.config.useComma === true;\n            this.config.lang     = this.systemConfig.language;\n            this.config.live     = parseInt(this.config.live, 10) || 0;\n            this.config.debug    = this.debug;\n            this.readData();\n            if (!this.serverSide && this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\n                this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\n            }\n        }\n    }\n\n    onHashChange() {\n        if (this.lastHash !== window.location.hash) {\n            this.lastHash = window.location.hash;\n            this.analyseAndLoadConfig();\n        }\n    };\n\n    onPresetUpdate(id, obj) {\n        if (id !== this.preset) {\n            return;\n        }\n        this.presetUpdateTimeout && clearTimeout(this.presetUpdateTimeout);\n        this.presetUpdateTimeout = setTimeout(() => {\n            this.presetUpdateTimeout = null;\n            let newConfig;\n            if (obj) {\n                newConfig = normalizeConfig(obj.native.data);\n            } else {\n                newConfig = normalizeConfig({});\n            }\n            if (JSON.stringify(newConfig) !== JSON.stringify(this.config)) {\n                this.config = newConfig;\n                this.updateInterval && clearInterval(this.updateInterval);\n                this.updateInterval = null;\n\n                if (this.config.live && (!this.zoomData|| !this.zoomData.stopLive)) {\n                    this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\n                }\n\n                this.readData();\n            }\n        }, 100);\n    };\n\n    setNewRange(options) {\n        this.debug && console.log(`[ChartModel] [${new Date().toISOString()}] setNewRange: ${JSON.stringify(options)}`);\n\n        if (!options) {\n            if (this.zoomData) {\n                this.zoomData = null;\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\n                this.readOnZoomTimeout = setTimeout(() => {\n                    this.readOnZoomTimeout = null;\n                    if (this.config.live && (!this.zoomData || !this.zoomData.stopLive)) {\n                        console.log('Restore update');\n                        this.updateInterval && clearInterval(this.updateInterval);\n                        this.updateInterval = setInterval(() => this.readData(), this.config.live * 1000);\n                    }\n                    this.readData();\n                }, this.updateTimeout);\n            }\n        } else if (options.stopLive) {\n            this.zoomData = this.zoomData || {};\n            this.zoomData.stopLive = true;\n            if (this.updateInterval) {\n                console.log('Clear interval');\n                clearInterval(this.updateInterval);\n                this.updateInterval = null;\n            }\n        } else {\n            // options = {start, end}\n            const stopLive = this.zoomData && this.zoomData.stopLive;\n            if (stopLive) {\n                delete this.zoomData.stopLive;\n            }\n            if (!this.zoomData || JSON.stringify(this.zoomData) !== JSON.stringify(options)) {\n                this.zoomData = options;\n                if (stopLive) {\n                    this.zoomData.stopLive = true;\n                }\n                this.readOnZoomTimeout && clearTimeout(this.readOnZoomTimeout);\n                this.readOnZoomTimeout = setTimeout(() => {\n                    this.readOnZoomTimeout = null;\n                    this.readData();\n                }, this.updateTimeout);\n            } else if (stopLive) {\n                this.zoomData.stopLive = true;\n            }\n        }\n    }\n\n    destroy() {\n        if (this.subscribed) {\n            !this.serverSide && this.subscribes.forEach(id => this.socket.unsubscribeState(id, this.onStateChangeBound));\n            this.subscribes = [];\n            this.subscribed = null;\n        }\n        if (this.readOnZoomTimeout) {\n            clearTimeout(this.readOnZoomTimeout);\n            this.readOnZoomTimeout = null;\n        }\n        if (this.presetUpdateTimeout) {\n            clearTimeout(this.presetUpdateTimeout);\n            this.presetUpdateTimeout = null;\n        }\n        if (this.presetSubscribed) {\n            !this.serverSide && this.socket.unsubscribeObject(this.presetSubscribed, this.onPresetUpdateBound);\n            this.presetSubscribed = null;\n        }\n        if (this.updateInterval) {\n            clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        if (!this.serverSide) {\n            this.onHashInstalled && window.removeEventListener('hashchange', this.onHashChangeBound, false);\n            this.onHashInstalled = false;\n        }\n    }\n\n    onUpdate(cb) {\n        this.onUpdateFunc = cb;\n    }\n\n    onReading(cb) {\n        this.onReadingFunc = cb;\n    }\n\n    onError(cb) {\n        this.onErrorFunc = cb;\n    }\n\n    getConfig() {\n        return this.config;\n    }\n\n    getSystemConfig() {\n        return this.systemConfig;\n    }\n\n    setConfig(config) {\n        this.analyseAndLoadConfig(config);\n    }\n\n    getStartStop(index, step) {\n        let option = {};\n        let end;\n        let start;\n        let _now;\n        this.config.l[index].offset = this.config.l[index].offset || 0;\n\n        const isMonthRange = typeof this.config.range === 'string' && this.config.range.includes('m');\n\n        // check config range\n        if (isMonthRange && this.config.l.length > 1) {\n            const monthRange = parseInt(this.config.range, 10) || 1;\n            for (let a = 0; a < this.config.l.length; a++) {\n                if (this.config.l[a].offset && this.config.l[a].offset !== 0) {\n                    // Check what the month has first index\n                    _now = this.addTime(this.now, this.config.l[0].offset);\n                    const minusMonth = new Date(_now);\n                    minusMonth.setMonth(minusMonth.getMonth() - monthRange);\n                    this.config.range = Math.floor((_now - minusMonth.getTime()) / 60000) + '';\n                    break;\n                }\n            }\n        }\n\n        if (!step) {\n            if (this.zoomData) {\n                start = this.zoomData.start;\n                end   = this.zoomData.end;\n            } else\n            if (this.config.timeType === 'static') {\n                let startTime;\n                let endTime;\n                if (this.config.start_time !== undefined) {\n                    startTime = this.config.start_time.split(':').map(Number);\n                } else {\n                    startTime = [0, 0];\n                }\n\n                if (this.config.end_time !== undefined) {\n                    endTime = this.config.end_time.split(':').map(Number);\n                } else {\n                    endTime = [24, 0];\n                }\n\n                // offset is in seconds\n                start = new Date(this.config.start).setHours(startTime[0], startTime[1]);\n                end   = new Date(this.config.end).setHours(endTime[0],   endTime[1]);\n                start = this.addTime(start, this.config.l[index].offset);\n                end   = this.addTime(end,   this.config.l[index].offset);\n            }\n            else {\n                this.config.relativeEnd = this.config.relativeEnd || 'now';\n\n                if (this.config.relativeEnd === 'now') {\n                    _now = new Date(this.now);\n                } else if (this.config.relativeEnd.indexOf('minute') !== -1) {\n                    const minutes = parseInt(this.config.relativeEnd, 10) || 1;\n                    _now = new Date(this.now);\n                    _now.setMinutes(Math.floor(_now.getMinutes() / minutes) * minutes + minutes);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                }  else if (this.config.relativeEnd.indexOf('hour') !== -1) {\n                    const hours = parseInt(this.config.relativeEnd, 10) || 1;\n                    _now = new Date(this.now);\n                    _now.setHours(Math.floor(_now.getHours() / hours) * hours + hours);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                } else if (this.config.relativeEnd === 'today') {\n                    _now = new Date(this.now);\n                    _now.setDate(_now.getDate() + 1);\n                    _now.setHours(0);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                } else if (this.config.relativeEnd === 'weekUsa') {\n                    //const week = parseInt(config.relativeEnd, 10) || 1;\n                    _now = new Date(this.now);\n                    _now.setDate(_now.getDate() - _now.getDay() + 7);\n                    _now.setHours(0);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                } else if (this.config.relativeEnd === 'weekEurope') {\n                    //const _week = parseInt(config.relativeEnd, 10) || 1;\n                    _now = new Date(this.now);\n                    // If\n                    if (_now.getDay() === 0) {\n                        _now.setDate(_now.getDate() + 1);\n                    } else {\n                        _now.setDate(_now.getDate() - _now.getDay() + 8);\n                    }\n                    _now.setHours(0);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                } else if (this.config.relativeEnd === 'month') {\n                    _now = new Date(this.now);\n                    _now.setMonth(_now.getMonth() + 1);\n                    _now.setDate(1);\n                    _now.setHours(0);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                } else if (this.config.relativeEnd === 'year') {\n                    _now = new Date(this.now);\n                    _now.setFullYear(_now.getFullYear() + 1);\n                    _now.setMonth(0);\n                    _now.setDate(1);\n                    _now.setHours(0);\n                    _now.setMinutes(0);\n                    _now.setSeconds(0);\n                    _now.setMilliseconds(0);\n                }\n\n                this.config.range = this.config.range || '30m';\n\n                end   = this.addTime(_now, this.config.l[index].offset);\n                start = this.addTime(end,  this.config.range, false, true);\n            }\n\n            option = {\n                start,\n                end,\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\n                from:       false,\n                ack:        false,\n                q:          false,\n                addID:      false,\n            };\n\n            if (this.config.aggregateType === 'step') {\n                option.step = this.config.aggregateSpan * 1000;\n            } else if (this.config.aggregateType === 'count') {\n                option.count = this.config.aggregateSpan || 300;\n            }\n\n            this.config.start = start;\n            this.config.end   = end;\n\n            return option;\n        } else {\n            if (this.zoomData) {\n                start = this.zoomData.start;\n                end = this.zoomData.end;\n            } else {\n                end   = this.addTime(this.now, this.config.l[index].offset);\n                start = end - step;\n            }\n\n            option = {\n                start,\n                end,\n                ignoreNull: this.config.l[index].ignoreNull === undefined ? this.config.ignoreNull : this.config.l[index].ignoreNull,\n                aggregate:  this.config.l[index].aggregate || this.config.aggregate || 'minmax',\n                count:      1,\n                from:       false,\n                ack:        false,\n                q:          false,\n                addID:      false,\n            };\n\n            this.config.start = this.addTime(end, this.config.range, false, true);\n            this.config.end   = end;\n\n            return option;\n        }\n    }\n\n    readOneChart(id, instance, index, cb) {\n        const option = this.getStartStop(index);\n        option.instance  = instance;\n        option.sessionId = this.sessionId;\n\n        //console.log(JSON.stringify(option));\n        this.debug && console.log('[ChartModel] ' + new Date(option.start) + ' - ' + new Date(option.end));\n\n        this.socket.getHistoryEx(id, option)\n            .then(res => {\n                if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\n                    return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\n                }\n\n                if (res && res.values) {\n                    //option.ignoreNull = (config.l[index].ignoreNull === undefined) ? (config.ignoreNull === 'true' || config.ignoreNull === true) : (config.l[index].ignoreNull === 'true' || config.l[index].ignoreNull === true);\n                    option.yOffset = this.config.l[index].yOffset;\n                    const values = res.values;\n\n                    this.seriesData[index] = []; // not really needed\n                    const _series = this.seriesData[index];\n\n                    for (let i = 0; i < values.length; i++) {\n                        // Convert boolean values to numbers\n                        if (values[i].val === 'true' || values[i].val === true) {\n                            values[i].val = 1;\n                        } else if (values[i].val === 'false' || values[i].val === false) {\n                            values[i].val = 0;\n                        }\n                        if (typeof values[i].val === 'string') {\n                            values[i].val = parseFloat(values[i].val);\n                        }\n\n                        _series.push({value: [values[i].ts, values[i].val !== null ? values[i].val + option.yOffset : null]});\n                    }\n\n                    // add start and end\n                    if (_series.length) {\n                        if (_series[0].value[0] > option.start) {\n                            _series.unshift({value: [option.start, null], exact: false});\n                        }\n                        const last = _series[_series.length - 1];\n                        if (last.value[0] < option.end) {\n                            if (this.config.l[index].validTime) {\n                                // If last value is not older than X seconds, assume it is still the same\n                                if (option.end - this.config.l[index].validTime * 1000 <= last.value[0]) {\n                                    _series.push({value: [option.end, last.value[1]], exact: false});\n                                } else {\n                                    _series.push({value: [option.end, null], exact: false});\n                                }\n                            } else {\n                                _series.push({value: [option.end, null], exact: false});\n                            }\n                        }\n                    } else {\n                        _series.push({value: [option.start, null], exact: false});\n                        _series.push({value: [option.end,   null], exact: false});\n                    }\n\n                    // TODO: May be not required?\n                    _series.sort((a, b) => a.value[0] > b.value[0] ? 1 : (a.value[0] < b.value[0] ? -1 : 0));\n\n                    // free memory\n                    res.values = null;\n                    res = null;\n                }\n\n                return Promise.resolve();\n            })\n            .catch(err => {\n                err === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(err);\n                err && console.error('[ChartModel] ' + err)\n            })\n            .then(() => {\n                if (this.config.legActual) {\n                    // read current value\n                    return this.socket.getState(id)\n                        .then(state => this.actualValues[index] = state && (state.val || state.val === 0) ? state.val : null)\n                        .catch(e => {\n                            console.warn(`Cannot read last value of ${id}: ${e}`);\n                            this.actualValues[index] = null;\n                        })\n                        .then(() => {\n                            if (!this.serverSide && !this.subscribes.includes(id)) {\n                                this.subscribes.push(id);\n                                this.subscribed = true;\n                                this.socket.subscribeState(id, this.onStateChangeBound);\n                            }\n                        })\n                } else {\n                    return Promise.resolve();\n                }\n            })\n            .then(() => cb(id, index))\n    }\n\n    _readObject(id) {\n        if (!this.objectPromises[id]) {\n            this.objectPromises[id] = this.socket.getObject(id)\n                .catch(e => {\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                    console.error(`Cannot read ${id}: ${e}`);\n                    return null;\n                });\n\n        }\n        return this.objectPromises[id];\n    }\n\n    _readOneLine(index, cb) {\n        return this._readObject(this.config.l[index].id)\n            .then(obj => {\n                if (obj && obj.common) {\n                    this.config.l[index].name = this.config.l[index].name || obj.common.name;\n                    this.config.l[index].unit = this.config.l[index].unit || (obj.common.unit ? obj.common.unit.replace('�', '°') : '');\n                    this.config.l[index].type = obj.common.type;\n                    if (this.config.l[index].chartType === 'auto') {\n                        this.config.l[index].chartType = obj.common.type === 'boolean' ? 'steps' : 'line';\n                        this.config.l[index].aggregate = obj.common.type === 'boolean' ? 'onchange' : 'minmax';\n                    }\n                }\n\n                return Promise.resolve();\n            })\n            .catch(e => {\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                console.error(`[ChartModel] Cannot read object ${this.config.l[index].id}: ${e}`);\n                return Promise.resolve();\n            })\n            .then(() => {\n                this.config.l[index].name = this.config.l[index].name || this.config.l[index].id;\n                this.config.l[index].unit = this.config.l[index].unit || '';\n                if (this.config.l[index].chartType === 'auto') {\n                    this.config.l[index].chartType = 'line';\n                    this.config.l[index].aggregate = 'minmax';\n                }\n                if (typeof this.config.l[index].name === 'object') {\n                    this.config.l[index].name = this.config.l[index].name[this.systemConfig.language] || this.config.l[index].name.en;\n                }\n                this.readOneChart(this.config.l[index].id, this.config.l[index].instance || this.defaultHistory, index, cb);\n            });\n    }\n\n    _readData(cb, j) {\n        j = j || 0;\n        if (j >= this.config.l.length) {\n            return cb();\n        } else {\n            if (this.config.l[j] !== '' && this.config.l[j] !== undefined) {\n                this.seriesData.push([]);\n            }\n\n            this._readOneLine(j, () =>\n                setTimeout(() => this._readData(cb, j + 1), 10));\n        }\n    }\n\n    readTicks(cb) {\n        if (!this.config.ticks) {\n            cb(null);\n        } else {\n            const index = 0;\n            const option = JSON.parse(JSON.stringify(this.getStartStop(index)));\n            option.instance  = this.config.l[index].instance || this.defaultHistory;\n            option.sessionId = this.sessionId;\n            option.aggregate = 'onchange';\n\n            this.debug && console.log('[ChartModel] Ticks: ' + new Date(option.start) + ' - ' + new Date(option.end));\n\n            this.socket.getHistoryEx(this.config.ticks, option)\n                .then(res => {\n                    if (this.sessionId && res.sessionId && res.sessionId !== this.sessionId) {\n                        return console.warn(`[ChartModel] Ignore request with sessionId=${res.sessionId}, actual is ${this.sessionId}`);\n                    }\n\n                    if (res && res.values) {\n                        const _series = this.ticks || [];\n                        if (this.ticks && this.ticks.length) {\n                            this.ticks.splice(0, this.ticks.length);\n                        }\n\n                        const values = res.values;\n\n                        for (let i = 0; i < values.length; i++) {\n                            // if less 2000.01.01 00:00:00\n                            //if (values[i].ts < 946681200000) {\n                            //    values[i].ts = values[i].ts * 1000;\n                            //}\n\n                            if (values[i].val !== null) {\n                                _series.push({value: [values[i].ts, values[i].val]});\n                            }\n                        }\n\n                        // add start and end\n                        if (_series.length) {\n                            if (_series[0][0] > option.start) {\n                                _series.unshift({value: [option.start, '']});\n                            }\n                            if (_series[_series.length - 1][0] < option.end) {\n                                _series.push({value: [option.end, '']});\n                            }\n                        } else {\n                            _series.push({value: [option.start, '']});\n                            _series.push({value: [option.end,   '']});\n                        }\n                        // free memory\n                        res.values = null;\n                        res = null;\n\n                        this.ticks = _series;\n                    }\n                    return Promise.resolve();\n                })\n                .catch(e => {\n                    e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                    console.error(`[ChartModel] ${e}`);\n                })\n                .then(() => cb && cb(this.ticks));\n        }\n    }\n\n    readValue(id, index, cb) {\n        this.socket.getState(id)\n            .then(state => {\n                if (state) {\n                    cb(index, parseFloat(state.val) || 0);\n                } else {\n                    cb(index, 0);\n                }\n            })\n            .catch(e => {\n                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                console.error(`[ChartModel] ${e}`);\n                cb(index, 0);\n            });\n    }\n\n    readMarkings(cb, m) {\n        m = m || 0;\n        if (!this.config.marks || !this.config.marks.length || m >= this.config.marks.length) {\n            return cb();\n        } else {\n            // read markings\n            return new Promise(resolve => {\n                if ((this.config.marks[m].upperValueOrId || this.config.marks[m].upperValueOrId === 0) &&\n                    parseFloat(this.config.marks[m].upperValueOrId).toString() !== this.config.marks[m].upperValueOrId.toString().replace(/\\.0*$/, '') &&\n                    this.config.marks[m].upperValueOrId.toString().includes('.')\n                ) {\n                    /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\n                        this.subscribes.push(this.config.marks[m].upperValueOrId);\n                    }*/\n\n                    this.socket.getState(this.config.marks[m].upperValueOrId)\n                        .then(state => {\n                            if (state && state.val !== undefined && state.val !== null) {\n                                this.config.marks[m].upperValue = parseFloat(state.val) || 0;\n                            } else {\n                                this.config.marks[m].upperValue = null;\n                            }\n                            resolve();\n                        })\n                        .catch(e => {\n                            e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                            console.error(`Cannot read marking ${this.config.marks[m].upperValueOrId}: ${e}`);\n                            resolve();\n                        });\n                } else {\n                    resolve();\n                }\n            })\n                .then(() => new Promise(resolve => {\n                    if ((this.config.marks[m].lowerValueOrId || this.config.marks[m].lowerValueOrId === 0) && parseFloat(this.config.marks[m].lowerValueOrId).toString() !== this.config.marks[m].lowerValueOrId.replace(/\\.0*$/, '') && this.config.marks[m].lowerValueOrId.includes('.')) {\n                        /*if (!this.subscribes.includes(this.config.marks[m].upperValueOrId)) {\n                            this.subscribes.push(this.config.marks[m].upperValueOrId);\n                        }*/\n\n                        this.socket.getState(this.config.marks[m].lowerValueOrId)\n                            .then(state => {\n                                if (state && state.val !== undefined && state.val !== null) {\n                                    this.config.marks[m].lowerValue = parseFloat(state.val) || 0;\n                                } else {\n                                    this.config.marks[m].lowerValue = null;\n                                }\n                                resolve();\n                            })\n                            .catch(e => {\n                                e === NOT_CONNECTED && this.onErrorFunc && this.onErrorFunc(e);\n                                console.error(`Cannot read marking ${this.config.marks[m].lowerValueOrId}: ${e}`);\n                                resolve();\n                            });\n                    } else {\n                        resolve();\n                    }\n                }))\n                .then(() =>\n                    setTimeout(() => this.readMarkings(cb, m + 1), 0));\n        }\n    }\n\n    subscribeAll(subscribes, cb, s) {\n        s = s || 0;\n\n        if (this.serverSide || !subscribes || !subscribes.length || s >= subscribes.length) {\n            cb();\n        } else {\n            this.socket.subscribeState(subscribes[s], this.onStateChangeBound);\n            setTimeout(() => this.subscribeAll(subscribes, cb, s + 1), 0);\n        }\n    }\n\n    onStateChange(id, state) {\n        if (!id || !state || !this.actualValues || this.reading) {\n            return;\n        }\n\n        this.debug && console.log('State update ' + id + ' - ' + state.val);\n\n        let changed = false;\n        for (let m = 0; m < this.config.l.length; m++) {\n            if (this.config.l[m].id === id) {\n                if (this.actualValues[m] !== state.val) {\n                    this.actualValues[m] = state.val;\n                    changed = true;\n                }\n                break;\n            }\n        }\n        changed && this.onUpdateFunc(null, this.actualValues);\n    };\n\n    addTime(time, offset, plusOrMinus, isOffsetInMinutes) {\n        time = new Date(time);\n\n        if (typeof offset === 'string') {\n            if (offset[1] === 'm') {\n                offset = parseInt(offset, 10);\n                time.setMonth(plusOrMinus ? time.getMonth() + offset : time.getMonth() - offset);\n                time = time.getTime();\n            } else if (offset[1] === 'y') {\n                offset = parseInt(offset, 10);\n                time.setFullYear(plusOrMinus ? time.getFullYear() + offset : time.getFullYear() - offset);\n                time = time.getTime();\n            } else {\n                time  = time.getTime();\n                if (isOffsetInMinutes) {\n                    if (plusOrMinus) {\n                        time += (parseInt(offset, 10) || 0) * 60000;\n                    } else {\n                        time -= (parseInt(offset, 10) || 0) * 60000;\n                    }\n\n                } else {\n                    if (plusOrMinus) {\n                        time += (parseInt(offset, 10) || 0) * 1000;\n                    } else {\n                        time -= (parseInt(offset, 10) || 0) * 1000;\n                    }\n                }\n            }\n        } else {\n            time  = time.getTime();\n            if (isOffsetInMinutes) {\n                if (plusOrMinus) {\n                    time += (parseInt(offset, 10) || 0) * 60000;\n                } else {\n                    time -= (parseInt(offset, 10) || 0) * 60000;\n                }\n\n            } else {\n                if (plusOrMinus) {\n                    time += (parseInt(offset, 10) || 0) * 1000;\n                } else {\n                    time -= (parseInt(offset, 10) || 0) * 1000;\n                }\n            }\n        }\n        return time;\n    }\n\n    readData() {\n        if (this.readOnZoomTimeout) {\n            clearTimeout(this.readOnZoomTimeout);\n            this.readOnZoomTimeout = null;\n        }\n\n        this.now = Date.now();\n        console.log('Read till ' + new Date(this.now));\n        this.sessionId = this.sessionId || 0;\n        this.sessionId++;\n        if (this.sessionId > 0xFFFFFF) {\n            this.sessionId = 1;\n        }\n\n        if (this.config.l) {\n            this.reading = true;\n            this.onReadingFunc && this.onReadingFunc(true);\n\n            // todo\n//            if (config.renderer === 'pie' || (config.renderer === 'bar' && config._ids.length > 1)) {\n//\n//                seriesData = [[]];\n//                for (const j = 0; j < config._ids.length; j++) {\n//                    readOneValue(config._ids[j], j, function (_id, _index, value) {\n//                        if (config.renderer === 'pie') {\n//                            seriesData[0][_index] = {label: config.l[_index].name, data: value};\n//                        } else {\n//                            seriesData[0][_index] = [config.l[_index].name, value];\n//                        }\n//                        if (_index === config._ids.length - 1) {\n//                            graphCreate(divId, );\n//                        }\n//                    });\n//                }\n//            } else {\n            this.seriesData = [];\n            this._readData(() =>\n                this.readTicks(_ticks =>\n                    this.readMarkings(() => {\n                        /*if (!this.subscribed) {\n                            this.subscribed = true;\n                            this.subscribeAll(this.subscribes, () =>\n                                this.onUpdateFunc(this.seriesData));\n                        } else {*/\n                            this.reading = false;\n                            this.onUpdateFunc(this.seriesData, this.actualValues);\n                        //}\n                    })));\n        } else {\n            this.onErrorFunc && this.onErrorFunc('No config provided');\n            this.onReadingFunc && this.onReadingFunc(false);\n            this.reading = false;\n        }\n    }\n}\n\nexport default ChartModel;\n","const THEMES = {\n    azul: [\n        '#f2385a',\n        '#f5a503',\n        '#4ad9d9',\n        '#f7879c',\n        '#c1d7a8',\n        '#4dffd2',\n        '#fccfd7',\n        '#d5f6f6'\n    ],\n    'bee-inspired': [\n        '#001727',\n        '#805500',\n        '#ffff00',\n        '#ffd11a',\n        '#f2d71f',\n        '#f2be19',\n        '#f3a81a',\n        '#fff5cc'\n    ],\n    'blue': [\n        '#1790cf',\n        '#1bb2d8',\n        '#99d2dd',\n        '#88b0bb',\n        '#1c7099',\n        '#038cc4',\n        '#75abd0',\n        '#afd6dd'\n    ],\n    infographic: [\n        '#C1232B',\n        '#27727B',\n        '#FCCE10',\n        '#E87C25',\n        '#B5C334',\n        '#FE8463',\n        '#9BCA63',\n        '#FAD860',\n        '#F3A43B',\n        '#60C0DD',\n        '#D7504B',\n        '#C6E579',\n        '#F4E001',\n        '#F0805A',\n        '#26C0C0'\n    ],\n    vintage: [\n        '#d87c7c',\n        '#919e8b',\n        '#d7ab82',\n        '#6e7074',\n        '#61a0a8',\n        '#efa18d',\n        '#787464',\n        '#cc7e63',\n        '#724e58',\n        '#4b565b'\n    ],\n    dark: [\n        '#dd6b66',\n        '#759aa0',\n        '#e69d87',\n        '#8dc1a9',\n        '#ea7e53',\n        '#eedd78',\n        '#73a373',\n        '#73b9bc',\n        '#7289ab',\n        '#91ca8c',\n        '#f49f42'\n    ],\n    macarons: [\n        '#2ec7c9',\n        '#b6a2de',\n        '#5ab1ef',\n        '#ffb980',\n        '#d87a80',\n        '#8d98b3',\n        '#e5cf0d',\n        '#97b552',\n        '#95706d',\n        '#dc69aa',\n        '#07a2a4',\n        '#9a7fd1',\n        '#588dd5',\n        '#f5994e',\n        '#c05050',\n        '#59678c',\n        '#c9ab00',\n        '#7eb00a',\n        '#6f5553',\n        '#c14089'\n    ],\n    shine: [\n        '#c12e34',\n        '#e6b600',\n        '#0098d9',\n        '#2b821d',\n        '#005eaa',\n        '#339ca8',\n        '#cda819',\n        '#32a487'\n    ],\n    roma: [\n        '#E01F54',\n        '#001852',\n        '#f5e8c8',\n        '#b8d2c7',\n        '#c6b38e',\n        '#a4d8c2',\n        '#f3d999',\n        '#d3758f',\n        '#dcc392',\n        '#2e4783',\n        '#82b6e9',\n        '#ff6347',\n        '#a092f1',\n        '#0a915d',\n        '#eaf889',\n        '#6699FF',\n        '#ff6666',\n        '#3cb371',\n        '#d5b158',\n        '#38b6b6'\n    ],\n    royal: [\n        '#3f7ea6',\n        '#993366',\n        '#408000',\n        '#8c6f56',\n        '#a65149',\n        '#731f17',\n        '#adc2eb',\n        '#d9c3b0'\n    ],\n    'dark-blue': [\n        '#00305a',\n        '#004b8d',\n        '#0074d9',\n        '#4192d9',\n        '#7abaf2',\n        '#99cce6',\n        '#d6ebf5',\n        '#eeeeee'\n    ],\n    'tech-blue': [\n        '#4d4d4d',\n        '#3a5897',\n        '#007bb6',\n        '#7094db',\n        '#0080ff',\n        '#b3b3ff',\n        '#00bdec',\n        '#33ccff',\n        '#ccddff',\n        '#eeeeee'\n    ],\n    red: [\n        '#d8361b',\n        '#f16b4c',\n        '#f7b4a9',\n        '#d26666',\n        '#99311c',\n        '#c42703',\n        '#d07e75'\n    ],\n    'red-velvet': [\n        '#8b1a2d',\n        '#a7314b',\n        '#e6004c',\n        '#ff8066',\n        '#8e5c4e',\n        '#ff1a66',\n        '#d6c582',\n        '#f0d4af'\n    ],\n    green: [\n        '#408829',\n        '#68a54a',\n        '#a9cba2',\n        '#86b379',\n        '#397b29',\n        '#8abb6f',\n        '#759c6a',\n        '#bfd3b7'\n    ],\n    light: ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'],\n    gray: [\n        '#757575',\n        '#c7c7c7',\n        '#dadada',\n        '#8b8b8b',\n        '#b5b5b5',\n        '#e9e9e9'\n    ],\n    'dark-bold': [\n        '#458c6b',\n        '#f2da87',\n        '#d9a86c',\n        '#d94436',\n        '#a62424',\n        '#76bc9b',\n        '#cce6da',\n        '#eeeeee'\n    ]\n};\n\nfunction padding2(num) {\n    if (!num) {\n        return '00';\n    }\n    // on safari 9.0 it is unknown\n    // return num.toString().padStart(2, '0');\n    num = (num || '').toString();\n    if (num.length < 2) {\n        return '0' + num;\n    } else {\n        return num;\n    }\n}\n\nfunction rgba2hex(color) {\n    const rgb = color.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    return rgb ?\n        '#' +\n        padding2(parseInt(rgb[1], 10).toString(16)) +\n        padding2(parseInt(rgb[2], 10).toString(16)) +\n        padding2(parseInt(rgb[3], 10).toString(16)) : color;\n}\n\nfunction brighterColor(color, amt) {\n    let usePound = false;\n\n    if (color.includes('rgb')) {\n        color = rgba2hex(color);\n    }\n\n    if (color[0] === '#') {\n        color = color.slice(1);\n        usePound = true;\n    }\n\n    const num = parseInt(color,16);\n\n    let r = (num >> 16) + amt;\n    if (r > 255) {\n        r = 255;\n    } else if (r < 0) {\n        r = 0;\n    }\n\n    let b = ((num >> 8) & 0x00FF) + amt;\n    if (b > 255) {\n        b = 255;\n    } else if (b < 0) {\n        b = 0;\n    }\n\n    let g = (num & 0x0000FF) + amt;\n    if (g > 255) {\n        g = 255;\n    } else if (g < 0) {\n        g = 0;\n    }\n\n    return (usePound ? '#' : '') + (g | (b << 8) | (r << 16)).toString(16);\n}\n\n//----- copied from\nconst Gradient = function (colorStops) {\n    this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n    constructor: Gradient,\n    addColorStop: function (offset, color) {\n        this.colorStops.push({\n            offset: offset,\n            color: color\n        });\n    }\n};\nconst LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n    // Should do nothing more in this constructor. Because gradient can be\n    // declared by `color: {type: 'linear', colorStops: ...}`, where\n    // this constructor will not be called.\n    this.x = x == null ? 0 : x;\n    this.y = y == null ? 0 : y;\n    this.x2 = x2 == null ? 1 : x2;\n    this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n    this.type = 'linear'; // If use global coord\n\n    this.global = globalCoord || false;\n    Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n    constructor: LinearGradient\n};\n\nfunction zrUtilInherits(clazz, baseClazz) {\n    const clazzPrototype = clazz.prototype;\n\n    function F() {}\n\n    F.prototype = baseClazz.prototype;\n    clazz.prototype = new F();\n\n    for (const prop in clazzPrototype) {\n        if (clazzPrototype.hasOwnProperty(prop)) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n    }\n\n    clazz.prototype.constructor = clazz;\n    clazz.superClass = baseClazz;\n}\nzrUtilInherits(LinearGradient, Gradient);\n\nclass ChartOption {\n    constructor(moment, themeType, calcTextWidth, config, compact) {\n        this.moment = moment;\n        if (!this.moment) {\n            throw new Error('moment must be set and initialized');\n        }\n\n        this.config = config ? JSON.parse(JSON.stringify(config)) : null;\n        this.calcTextWidth = calcTextWidth;\n        this.themeType = themeType || 'light';\n        this.chart = {yAxis: []};\n        this.isTouch = typeof window !== 'undefined' ? 'ontouchstart' in window.document.documentElement : false;\n        this.compact = compact;\n        this.lastFormattedTime = null;\n    }\n\n    setThemeName(themeType) {\n        this.themeType = themeType || 'light';\n    }\n\n    setConfig(config) {\n        this.config = config;\n    }\n\n    getHelperChartData() {\n        return this.chart;\n    }\n\n    convertData(data, i, yAxisIndex) {\n        const values = data[i];\n        if (!values || !values.length) {\n            return [];\n        }\n\n        const yAxis = this.chart.yAxis[yAxisIndex] || {max: null, min: null};\n        this.chart.yAxis[yAxisIndex] = yAxis;\n\n        for (let i = 0; i < values.length; i++) {\n            if (values[i].value[1] === null) {\n                continue;\n            }\n\n            if (yAxis.min === null || yAxis.min > values[i].value[1]) {\n                yAxis.min = values[i].value[1];\n            }\n            if (yAxis.max === null || yAxis.max < values[i].value[1]) {\n                yAxis.max = values[i].value[1];\n            }\n        }\n\n        if (this.chart.xMin === null || this.chart.xMin > values[0].value[0]) {\n            this.chart.xMin = values[0].value[0];\n        }\n        if (this.chart.xMax === null || this.chart.xMax < values[values.length - 1].value[0]) {\n            this.chart.xMax = values[values.length - 1].value[0];\n        }\n\n        return values;\n    }\n\n    getSeries(data, theme) {\n        this.chart.xMin = null;\n        this.chart.xMax = null;\n        let colorCount = 0;\n\n        return this.config.l.map((oneLine, i) => {\n            const color = oneLine.color || (THEMES[theme] ? THEMES[theme][colorCount % THEMES[theme].length] : '');\n            if (!oneLine.color) {\n                colorCount++;\n            }\n\n            oneLine.shadowsize = parseFloat(oneLine.shadowsize) || 0;\n            if (oneLine.dashes === 'false') {\n                oneLine.dashes = false;\n            } else if (oneLine.dashes === 'true') {\n                oneLine.dashes = true;\n            }\n\n            const yAxisIndex = oneLine.commonYAxis === '' || oneLine.commonYAxis === undefined ? i : parseInt(oneLine.commonYAxis) || 0;\n            const cfg = {\n                name: oneLine.name,\n                clip: true,\n                xAxisIndex: 0,\n\n                silent: true,\n                yAxisIndex,\n                type: oneLine.chartType === 'scatterplot' ? 'scatter' : 'line',\n                showSymbol: oneLine.chartType === 'scatterplot' || oneLine.points,\n                //hoverAnimation: false,\n                animation: false,\n                step: oneLine.chartType === 'steps' ? 'end' : (oneLine.chartType === 'stepsStart' ? 'start' : undefined) ,\n                smooth: oneLine.chartType === 'spline',\n                data: this.convertData(data, i, yAxisIndex),\n                itemStyle: {color},\n                symbolSize: (oneLine.chartType === 'scatterplot' || oneLine.points) ? (oneLine.symbolSize || 3) : undefined,\n                symbol: 'circle',\n                emphasis: {\n                    scale: false,\n                    focus: 'none',\n                    blurScope: 'none',\n                    lineStyle: {\n                        width:          oneLine.thickness !== undefined ? parseFloat(oneLine.thickness) : 1,\n                        shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\n                        shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\n                        shadowColor:    color,\n                        type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\n                    },\n                },\n                lineStyle: {\n                    width:          oneLine.thickness !== undefined ? parseFloat(oneLine.thickness) : 1,\n                    shadowBlur:     oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\n                    shadowOffsetY:  oneLine.shadowsize ? oneLine.shadowsize + 1 : 0,\n                    shadowColor:    color,\n                    type:           oneLine.dashes ? 'dashed' : (oneLine.lineStyle || 'solid'),\n                }\n            };\n            if (parseFloat(oneLine.fill)) {\n                let _color;\n                if (!this.isTouch) {\n                    _color = new LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: brighterColor(color, 30)\n                    }, {\n                        offset: 1,\n                        color\n                    }]);\n                } else {\n                    _color = color;\n                }\n                cfg.areaStyle = {\n                    color: _color,\n                    opacity: parseFloat(oneLine.fill) || 0,\n                };\n            }\n\n            return cfg;\n        });\n    }\n\n    getXAxis() {\n        return [\n            {\n                type: 'time',\n                splitLine: {\n                    show: !this.config.grid_hideX,\n                    lineStyle: this.config.l[0].xaxe === 'off' ? {color: 'rgba(0,0,0,0)', type: 'dashed'} : this.config.grid_color ? {\n                        color: this.config.grid_color,\n                        type: 'dashed',\n                    } : {type: 'dashed'},\n                },\n                splitNumber: parseInt(this.config.l[0].xticks, 10) || undefined,\n                position: this.config.l[0].xaxe === 'top' ? 'top' : 'bottom',\n                min: this.chart.xMin,\n                max: this.chart.xMax,\n                axisTick: {\n                    alignWithLabel: true,\n                    lineStyle: this.config.l[0].xaxe === 'off' ?\n                        {color: 'rgba(0,0,0,0)'}\n                        :\n                        (this.config.x_ticks_color ? {color: this.config.x_ticks_color} : undefined),\n                },\n                axisLabel: {\n                    show: !this.compact,\n                    formatter: (value, _index) => this.xFormatter(value, _index, this.config.l[0].xaxe === 'top'),\n                    fontSize: parseInt(this.config.x_labels_size, 10) || 12,\n                    color: this.config.l[0].xaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.x_labels_color || undefined),\n                    rich: {\n                        a: {\n                            fontWeight: 'bold',\n                        },\n                        b: {\n                            opacity: 0,\n                        },\n                    }\n                }\n            }\n        ];\n    }\n\n    getYAxis(theme, series) {\n        return this.config.l.map((oneLine, i) => {\n            if (!oneLine || (oneLine.commonYAxis !== '' && oneLine.commonYAxis !== undefined)) {\n                return {};\n            }\n\n            let yMin = parseFloat(oneLine.min);\n            let yMax = parseFloat(oneLine.max);\n\n            const yAxis = this.chart.yAxis;\n            if (yAxis[i]) {\n                const diff = yAxis[i].max - yAxis[i].min;\n                if (isNaN(yMin)) {\n                    // auto calculate\n                    yMin = yAxis[i].min - diff * 0.1; // min - 10%\n                    if (diff > 25000) {\n                        yMin = Math.floor(yMin / 10000) * 10000;\n                    } else if (diff > 5000) {\n                        yMin = Math.floor(yMin / 1000) * 1000;\n                    } else if (diff > 200) {\n                        yMin = Math.floor(yMin / 100) * 100;\n                    } else if (diff > 30) {\n                        yMin = Math.floor(yMin / 10) * 10;\n                    } else if (diff > 10) {\n                        yMin = Math.floor(yMin);\n                    } else if (diff > 1) {\n                        yMin = Math.floor(yMin * 10) / 10;\n                    }\n                }\n                if (isNaN(yMax)) {\n                    // auto calculate\n                    yMax = yAxis[i].max + diff * 0.1; // max + 10%\n                    if (diff > 25000) {\n                        yMax = Math.ceil(yMax / 10000) * 10000;\n                    } else if (diff > 5000) {\n                        yMax = Math.ceil(yMax / 1000) * 1000;\n                    } else if (diff > 200) {\n                        yMax = Math.ceil(yMax / 100) * 100;\n                    } else if (diff > 30) {\n                        yMax = Math.ceil(yMax / 10) * 10;\n                    } else if (diff > 10) {\n                        yMax = Math.ceil(yMax);\n                    } else if (diff > 1) {\n                        yMax = Math.floor(yMax * 10) / 10;\n                    }\n                }\n            } else {\n                if (isNaN(yMin)) {\n                    yMin = undefined;\n                }\n                if (isNaN(yMax)) {\n                    yMax = undefined;\n                }\n            }\n\n            let color = oneLine.yaxe === 'off' ? 'rgba(0,0,0,0)' : (this.config.grid_color || undefined);\n            if (oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor') {\n                color = series[i].itemStyle.color;\n            }\n\n            return {\n                type: 'value',\n                min: yMin,\n                max: yMax,\n                position: (oneLine.yaxe === 'left' || oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor') ?\n                    'left' :\n                    (oneLine.yaxe === 'right' || oneLine.yaxe === 'rightColor' ?\n                            'right' :\n                            (!i ? 'left' : 'right')\n                    ), // by default only first line is on the left\n                splitLine: !i ? { // grid has only first line\n                    show: !this.config.grid_hideY,\n                    lineStyle: {\n                        color: color || undefined,\n                        type: 'dashed',\n                    },\n                } : undefined,\n                splitNumber: parseInt(oneLine.yticks, 10) || undefined,\n                axisLabel: {\n                    show: !this.compact,\n                    formatter: value => this.yFormatter(value, i, true),\n                    color: oneLine.yaxe === 'off' || oneLine.yaxe === 'leftColor' || oneLine.yaxe === 'rightColor' ? color : (this.config.y_labels_color || undefined),\n                    fontSize: parseInt(this.config.y_labels_size, 10) || 12\n                },\n                axisTick: {\n                    alignWithLabel: true,\n                    lineStyle: color ? {color} : (this.config.y_ticks_color ? {color: this.config.y_ticks_color} : undefined)\n                }\n            };\n        });\n    }\n\n    getMarkings(options) {\n        // fill markings\n        this.config.marks && this.config.marks.forEach(oneMark => {\n            if (!oneMark) {\n                return;\n            }\n            const lowerLimitFloat = oneMark.lowerValue !== undefined ? oneMark.lowerValue : parseFloat(oneMark.lowerValueOrId);\n            const upperLimitFloat = oneMark.upperValue !== undefined ? oneMark.upperValue : parseFloat(oneMark.upperValueOrId);\n            const isLowerNumber   = lowerLimitFloat !== null && !isNaN(lowerLimitFloat);\n            const isUpperNumber   = upperLimitFloat !== null && !isNaN(upperLimitFloat);\n\n            const series = options.series[oneMark.lineId];\n\n            if (!series) {\n                console.error('Mark line has no chart line');\n                return;\n            }\n\n            if (isLowerNumber && isUpperNumber) {\n                // area\n                series.markArea = series.markArea || {\n                    symbol: ['none', 'none'],\n                    data: []\n                };\n                series.markArea.data.push([\n                    {\n                        yAxis: lowerLimitFloat,\n                        name: oneMark.text || '',\n                        itemStyle: {\n                            color:       oneMark.color || series.itemStyle.color,\n                            borderWidth: 0,\n                            opacity:     parseFloat(oneMark.fill) || 0,\n                        }\n                    },\n                    {\n                        yAxis: upperLimitFloat\n                    },\n                ]);\n\n            }\n            if (isLowerNumber || isUpperNumber) {\n                for (let i = 0; i < 2; i++) {\n                    if (!i && !isUpperNumber) {\n                        continue;\n                    } else if (i && !isLowerNumber) {\n                        continue;\n                    }\n                    const limitFloat = i ? lowerLimitFloat : upperLimitFloat;\n                    series.markLine = series.markLine || {\n                        symbol: ['none', 'none'],\n                        data: []\n                    };\n\n                    series.markLine.data.push({\n                        yAxis: limitFloat,\n                        name: oneMark.text,\n                        lineStyle: {\n                            color:          oneMark.color || series.itemStyle.color,\n                            width:          parseFloat(oneMark.ol) || 1,\n                            shadowBlur:     parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\n                            shadowOffsetY:  parseFloat(oneMark.os) ? parseFloat(oneMark.os) + 1 : 0,\n                            shadowColor:    oneMark.color,\n                            type:           oneMark.lineStyle || 'solid',\n                        },\n                        label: {\n                            show: !!oneMark.text,\n                            formatter: param => param.name,\n                            position: oneMark.textPosition === 'r' ? 'end' : 'start',\n                            distance: (-1 * oneMark.textOffset) || -35,\n                            textStyle: {\n                                color: oneMark.textColor || '#FFF',\n                                fontStyle: 'normal',\n                                fontSize: oneMark.textSize || undefined,\n                            }\n                        },\n                    });\n\n                    if (this.config.l[oneMark.lineId]) {\n                        // if minimum not set\n                        let yMin = parseFloat(this.config.l[oneMark.lineId].min);\n                        if (isNaN(yMin) && this.chart.yAxis[oneMark.lineId]) {\n                            if (this.chart.yAxis[oneMark.lineId].min > limitFloat && limitFloat < 0) {\n                                options.yAxis[0].min = limitFloat;\n                            }\n                        }\n                        let yMax = parseFloat(this.config.l[oneMark.lineId].min);\n                        if (isNaN(yMax) && this.chart.yAxis[oneMark.lineId]) {\n                            if (this.chart.yAxis[oneMark.lineId].max < limitFloat) {\n                                options.yAxis[0].max = limitFloat;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n\n        return options;\n    }\n\n    yFormatter(val, line, withUnit, interpolated, ignoreWidth) {\n        if (this.config.l[line].type === 'boolean') {\n            return val ? 'TRUE' : 'FALSE';\n        }\n\n        if (val === null || val === undefined) {\n            return '';\n        }\n\n        const afterComma = this.config.l[line].afterComma;\n        if (afterComma !== undefined && afterComma !== null) {\n            val = parseFloat(val);\n            if (this.config.useComma) {\n                return val.toFixed(afterComma).replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\n            } else {\n                return val.toFixed(afterComma) + (withUnit ? this.config.l[line].unit : '');\n            }\n        } else {\n            if (interpolated) {\n                val = Math.round(val * 10000) / 10000;\n            }\n\n            if (this.config.useComma) {\n                val = parseFloat(val) || 0;\n                return val.toString().replace('.', ',') + (withUnit ? this.config.l[line].unit : '');\n            } else {\n                return val.toString() + (withUnit ? this.config.l[line].unit : '');\n            }\n        }\n    }\n\n    isXLabelHasBreak() {\n        if (this.config.timeFormat) {\n            return this.config.timeFormat.replace('<br/>', '\\n').includes('\\n');\n        } else\n        if (this.chart.withSeconds) {\n            return true;\n        } else if (this.chart.withTime) {\n            return true;\n        } else {\n            return true;\n        }\n    }\n\n    xFormatter(value, _index, isTop) {\n        const date = new Date(value);\n        if (this.config.timeFormat) {\n            return this.moment(date).format(this.config.timeFormat).replace('<br/>', '\\n');\n        } else {\n            let dateTxt = '';\n            const dateInMonth = date.getDate();\n            if (this.chart.withSeconds || this.chart.withTime) {\n                let showDate = false;\n                if (_index < 2 || this.lastFormattedTime === null || value < this.lastFormattedTime) {\n                    showDate = true;\n                } else\n                if (!showDate && new Date(this.lastFormattedTime).getDate() !== dateInMonth) {\n                    showDate = true;\n                }\n                if (showDate) {\n                    if (isTop) {\n                        dateTxt = '{a|' + padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '.}\\n';\n                    } else {\n                        dateTxt = '{b|..}\\n{a|' + padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '.}';\n                    }\n                }\n                this.lastFormattedTime = value;\n                if (isTop) {\n                    if (this.chart.withSeconds) {\n                        return dateTxt + padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds()) + (dateTxt ? '{b|..}' : '');\n                    } else if (this.chart.withTime) {\n                        return dateTxt + padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + (dateTxt ? '{b|..}' : '');\n                    }\n                } else {\n                    if (this.chart.withSeconds) {\n                        return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + ':' + padding2(date.getSeconds()) + dateTxt;\n                    } else if (this.chart.withTime) {\n                        return padding2(date.getHours()) + ':' + padding2(date.getMinutes()) + dateTxt;\n                    }\n                }\n            } else {\n                return padding2(dateInMonth) + '.' + padding2(date.getMonth() + 1) + '\\n' + date.getFullYear();\n            }\n        }\n    }\n\n    // result.val === null => start and end are null\n    // result === null => no start or no end\n    getInterpolatedValue(i, ts, type, hoverNoNulls) {\n        const data = this.option.series[i].data;\n        if (!data || !data[0] || data[0].value[0] > ts || data[data.length - 1].value[0] < ts) {\n            return null;\n        }\n\n        for (let k = 0; k < data.length - 1; k++) {\n            if (data[k].value[0] === ts) {\n                // Calculate\n                return {exact: true, val: data[k].value[1]};\n            } else if (data[k].value[0] < ts && ts < data[k + 1].value[0]) {\n                const y1 = data[k].value[1];\n                const y2 = data[k + 1].value[1];\n                if (y2 === null || y2 === undefined || y1 === null || y1 === undefined) {\n                    return hoverNoNulls ? null : {exact: false, val: null};\n                }\n                if (type === 'boolean') {\n                    return {exact: false, val: y1};\n                }\n\n                // interpolate\n                const diff = data[k + 1].value[0] - data[k].value[0];\n                const kk = (data[k + 1].value[0] - ts) / diff;\n                return {exact: false, val: (1 - kk) * (y2 - y1) + y1};\n            }\n        }\n        return hoverNoNulls ? null : {exact: false, val: null};\n    }\n\n    renderTooltip(params) {\n        const ts = params[0].value[0];\n        const date = new Date(ts);\n        const hoverNoNulls = this.config.hoverNoNulls === true || this.config.hoverNoNulls === 'true';\n\n        const values = this.option.series.map((line, i) => {\n            const p = params.find(param => param.seriesIndex === i);\n            let interpolated;\n            if (p) {\n                interpolated = {exact: p.data.exact !== undefined ? p.data.exact : true, val: p.value[1]};\n            }\n\n            interpolated = interpolated || this.getInterpolatedValue(i, ts, this.config.l[i].type, hoverNoNulls);\n            if (!interpolated) {\n                return '';\n            }\n            if (!interpolated.exact && this.config.hoverNoInterpolate) {\n                return '';\n            }\n\n            const val = interpolated.val === null ?\n                'null' :\n                this.yFormatter(interpolated.val, i, false, !interpolated.exact, true);\n\n            return `<div style=\"width: 100%; display: inline-flex; justify-content: space-around; color: ${line.itemStyle.color}\">` +\n                `<div style=\"display: flex;margin-right: 4px\">${line.name}:</div>` +\n                `<div style=\"display: flex; flex-grow: 1\"></div>` +\n                `<div style=\"display: flex;\">${interpolated.exact ? '' : 'i '}<b>${val}</b>${interpolated.val !== null ? this.config.l[i].unit : ''}</div>` +\n                `</div>`;\n        });\n\n        const format = this.config.timeFormat || 'dd, MM Do YYYY, HH:mm:ss.SSS';\n        return `<b>${this.moment(date).format(format)}</b><br/>${values.filter(t => t).join('<br/>')}`;\n    }\n\n    getLegend(actualValues) {\n        if (!this.config.legend || this.config.legend === 'none') {\n            return undefined;\n        } else {\n            const legend = {\n                data:   this.config.l.map(oneLine => oneLine.name),\n                show:   true,\n                left:   this.config.legend === 'nw' || this.config.legend === 'sw' ?  this.chart.padLeft   + 1 : undefined,\n                right:  this.config.legend === 'ne' || this.config.legend === 'se' ?  this.chart.padRight  + 1 : undefined,\n                top:    this.config.legend === 'nw' || this.config.legend === 'ne' ?  this.chart.padTop    + 2 : undefined,\n                bottom: this.config.legend === 'sw' || this.config.legend === 'se' ?  this.chart.padBottom + 2 : undefined,\n                backgroundColor: this.config.legBg || undefined,\n                formatter: (name, arg) => {\n                    if (this.config.legActual && actualValues) {\n                        for (let i = 0; i < this.config.l.length; i++) {\n                            if (this.config.l[i].name === name) {\n                                return `${name} [${this.yFormatter(actualValues[i], i, true, true, true)}]`;\n                            }\n                        }\n                    }\n                    return name;\n                },\n                textStyle: {\n                    color: this.config.legColor || (this.themeType === 'light' ? '#000' : '#FFF'),\n                    fontSize:this.config.legFontSize,\n                },\n                orient: this.config.legendDirection || 'horizontal',\n                selected: {}\n            };\n\n            this.config.l.forEach(oneLine => legend.selected[oneLine.name] = oneLine.hide !== true);\n\n            return legend;\n        }\n    }\n\n    getTitle() {\n        if (!this.config || !this.config.title) {\n            return undefined;\n        }\n        let titlePos = {};\n        (this.config.titlePos || 'top:35;left:65').split(';').forEach(a => {\n            const parts = a.split(':');\n            titlePos[parts[0].trim()] = parseInt(parts[1].trim(), 10);\n        });\n\n        return {\n            text: this.config.title,\n            textStyle: {\n                fontSize: this.config.titleSize ? parseInt(this.config.titleSize, 10) : 20,\n                color:    this.config.titleColor || (this.themeType === 'light' ? '#000' : '#FFF')\n            },\n            textVerticalAlign: titlePos.bottom      ? 'bottom' : 'top',\n            textAlign:         titlePos.left === 50 ? 'center' : (titlePos.right === -5 ? 'right' : 'left'),\n            top:               titlePos.top  === 35 ? 5 + this.chart.padTop : (titlePos.top === 50 ? '50%'   : undefined),\n            left:              titlePos.left === 50 ? '50%'    : (titlePos.left  === 65 ? this.chart.padLeft : undefined),\n            bottom:            titlePos.bottom      ? (titlePos.bottom > 0 ? titlePos.bottom + this.chart.padBottom - 15 : titlePos.bottom) : undefined,\n            right:             titlePos.right === 5 ? this.chart.padRight : undefined,\n        };\n    }\n\n    getOption(data, config, actualValues) {\n        if (config) {\n            this.config = JSON.parse(JSON.stringify(config));\n        }\n        const useCanvas = this.isTouch && this.config.zoom;\n\n        let theme = this.config.theme;\n        if (!theme || theme === 'default') {\n            theme = this.themeType === 'light' ? 'roma' : 'dark-bold';\n        }\n\n        this.debug = this.config && this.config.debug;\n\n        this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] ${JSON.stringify(this.config, null, 2)}`);\n\n        const series = this.getSeries(data, theme);\n\n        if (this.config.start) {\n            if (this.chart.xMax < this.config.end) {\n                this.chart.xMax = this.config.end;\n            }\n            if (this.chart.xMin > this.config.start) {\n                this.chart.xMin = this.config.start;\n            }\n        }\n\n        this.chart.diff        = this.chart.xMax - this.chart.xMin;\n        this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\n        this.chart.withSeconds = this.chart.diff < 60000 * 30;\n        this.config.y_labels_size = parseInt(this.config.y_labels_size, 10) || 12;\n        this.config.x_labels_size = parseInt(this.config.x_labels_size, 10) || 12;\n        this.config.legFontSize   = parseInt(this.config.legFontSize, 10) || 12;\n\n        const yAxis = this.getYAxis(theme, series);\n        const xAxis = this.getXAxis();\n\n        const option = {\n            theme,\n            backgroundColor: 'transparent',\n            animation: !this.config.noAnimation && !this.config.noLoader,\n            grid: {\n                backgroundColor: this.config.bg_custom || 'transparent',\n                show: !!this.config.bg_custom,\n                left:   0,\n                top:    8,\n                right:  0,\n                bottom: this.compact ? 4 : (this.isXLabelHasBreak() ? 40 : 24),\n            },\n            tooltip: !this.compact && this.config.hoverDetail ? {\n                trigger: 'axis',\n                formatter: params => this.renderTooltip(params),\n                hoverAnimation: true,\n                axisPointer: {\n                    animation: true\n                }\n            } : undefined,\n            xAxis,\n            yAxis,\n            /*toolbox: false && (this.config.export === true || this.config.export === 'true') ? {\n                left: 'right',\n                feature: {\n                    saveAsImage: {\n                        title: props.t('Save as image'),\n                        show: true,\n                    }\n                }\n            } : undefined,*/\n            /*dataZoom: [\n                {\n                    show: true,\n                    realtime: true,\n                    startValue: this.start,\n                    endValue: this.end,\n                    y: this.state.chartHeight - 50,\n                    dataBackground: {\n                        lineStyle: {\n                            color: '#FFFFFF'\n                        },\n                        areaStyle: {\n                            color: '#FFFFFFE0'\n                        }\n                    },\n                },\n                {\n                    show: true,\n                    type: 'inside',\n                    realtime: true,\n                },\n            ],*/\n            series,\n            useCanvas\n        };\n\n        this.getMarkings(option);\n\n        if (!this.compact) {\n            // calculate padding: left and right\n            let padLeft  = 0;\n            let padRight = 0;\n            let padBottom = 0;\n            let padTop = 0;\n            series.forEach((ser, i) => {\n                let yAxis = option.yAxis[ser.yAxisIndex];\n                if (!yAxis) {\n                    // seems this axis is defined something else\n                    const cY = this.config.l[ser.yAxisIndex] ? this.config.l[ser.yAxisIndex].commonYAxis : undefined;\n                    if (cY !== undefined) {\n                        yAxis = option.yAxis[cY];\n                    } else {\n                        console.log('Cannot find Y axis for line ' + i);\n                        return;\n                    }\n                }\n\n                let minTick = this.yFormatter(yAxis.min, i, true);\n                let maxTick = this.yFormatter(!yAxis.min && yAxis.max === yAxis.min ? 0.8 : yAxis.max, i, true);\n\n                if (xAxis[0].position === 'top') {\n                    padTop = this.isXLabelHasBreak() ? 40 : 24;\n                } else\n                if (xAxis[0].position !== 'off' || xAxis[0].position === 'bottom') {\n                    padBottom = this.isXLabelHasBreak() ? 40 : 24;\n                }\n\n                const position = yAxis.position;\n                if (position === 'off' || (yAxis.axisLabel && yAxis.axisLabel.color === 'rgba(0,0,0,0)')) {\n                    return;\n                }\n                let wMin = this.calcTextWidth(minTick, this.config.y_labels_size) + 4;\n                let wMax = this.calcTextWidth(maxTick, this.config.y_labels_size) + 4;\n                if (position !== 'right' && position !== 'rightColor') {\n                    if (wMin > padLeft) {\n                        padLeft = wMin;\n                    }\n                    if (wMax > padLeft) {\n                        padLeft = wMax;\n                    }\n                } else {\n                    if (wMin > padRight) {\n                        padRight = wMin;\n                    }\n                    if (wMax > padRight) {\n                        padRight = wMax;\n                    }\n                }\n            });\n            option.grid.left    = padLeft  + 10;\n            option.grid.right   = padRight + 10 + (this.config.export === true || this.config.export === 'true' ? 20 : 0);\n            // if xAxis shown, let the place for last value\n            if (option.grid.right <= 10 && (padTop || padBottom)) {\n                option.grid.right = 18;\n            }\n            if (option.grid.left <= 10 && (padTop || padBottom)) {\n                option.grid.left = 18;\n            }\n            this.chart.padLeft  = option.grid.left;\n            this.chart.padRight = option.grid.right;\n            if (!padTop) {\n                padTop = 8;\n            }\n            if (!padBottom) {\n                padBottom = 8;\n            }\n            option.grid.top      = padTop;\n            option.grid.bottom   = padBottom;\n            this.chart.padTop    = option.grid.top;\n            this.chart.padBottom = option.grid.bottom;\n        }\n\n        // 'nw': 'Top, left',\n        // 'ne': 'Top, right',\n        // 'sw': 'Bottom, left',\n        // 'se': 'Bottom, right',\n        option.legend = this.getLegend(actualValues);\n        option.title  = this.getTitle();\n\n        if (!this.config.grid_color) {\n            option.yAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\n            option.xAxis.forEach(axis => axis.splitLine && delete axis.splitLine.lineStyle);\n        }\n\n        this.option = option;\n        return this.option;\n    }\n}\n\nexport default ChartOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withWidth from '@material-ui/core/withWidth';\nimport {withStyles} from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Fab from '@material-ui/core/Fab';\n\nimport {FaRedoAlt as IconReset}  from 'react-icons/fa'\nimport {FaDownload as IconExport}  from 'react-icons/fa'\n\nimport moment from 'moment';\nimport 'moment/locale/en-gb';\nimport 'moment/locale/es';\nimport 'moment/locale/fr';\nimport 'moment/locale/pl';\nimport 'moment/locale/pt';\nimport 'moment/locale/it';\nimport 'moment/locale/nl';\nimport 'moment/locale/ru';\nimport 'moment/locale/zh-cn';\nimport 'moment/locale/de';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\n\nimport * as echarts from 'echarts/core';\nimport { LineChart, ScatterChart} from 'echarts/charts';\nimport {\n    GridComponent,\n    ToolboxComponent,\n    TitleComponent,\n    LegendComponent,\n    DataZoomComponent,\n    TimelineComponent,\n    MarkLineComponent,\n    MarkAreaComponent,\n    TooltipComponent,\n} from 'echarts/components';\n\nimport { SVGRenderer, CanvasRenderer } from 'echarts/renderers';\n\nimport ChartOption from './ChartOption';\n\n// Themes\nimport 'echarts/theme/azul';\nimport 'echarts/theme/bee-inspired';\nimport 'echarts/theme/blue';\nimport 'echarts/theme/infographic';\nimport 'echarts/theme/vintage';\nimport 'echarts/theme/dark';\nimport 'echarts/theme/macarons';\nimport 'echarts/theme/shine';\nimport 'echarts/theme/roma';\nimport 'echarts/theme/royal';\nimport 'echarts/theme/dark-blue';\nimport 'echarts/theme/tech-blue';\nimport 'echarts/theme/red';\nimport 'echarts/theme/red-velvet';\nimport 'echarts/theme/green';\nimport 'echarts/theme/gray';\nimport 'echarts/theme/dark-bold';\n\necharts.use([\n    GridComponent,\n    ToolboxComponent,\n    TitleComponent,\n    LegendComponent,\n    DataZoomComponent,\n    TimelineComponent,\n    MarkLineComponent,\n    MarkAreaComponent,\n    TooltipComponent,\n    // Axis2D,\n    // CartesianGrid,\n    GridComponent,\n\n    LineChart,\n    ScatterChart,\n\n    SVGRenderer,\n\n    CanvasRenderer,\n]);\n\nconst styles = theme => ({\n    chart: {\n        maxHeight: '100%',\n        maxWidth: '100%',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        position: 'relative',\n    },\n    exportButton: {\n        position: 'absolute',\n        top: 40,\n        right: 5,\n        width: 20,\n        height: 20,\n        zIndex: 2,\n        opacity: 0.7,\n        cursor: 'pointer'\n        //background: '#00000000',\n    },\n    resetButton: {\n        position: 'absolute',\n        top: 10,\n        right: 25,\n        zIndex: 2,\n        opacity: 0.7\n        //background: '#00000000',\n    },\n    resetButtonIcon: {\n        paddingTop: 6,\n    },\n});\n\nlet canvasCalcTextWidth = null;\nfunction calcTextWidth(text, fontSize, fontFamily) {\n    // canvas for better performance\n    const canvas = canvasCalcTextWidth || (canvasCalcTextWidth = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    context.font = `${fontSize || 12}px ${fontFamily || 'Microsoft YaHei'}`;\n    const metrics = context.measureText(text);\n    return Math.ceil(metrics.width);\n}\n\nif (!String.prototype.padStart) {\n    // Copyright (c) 2019 Behnam Mohammadi MIT https://github.com/behnammodi/polyfill/blob/master/string.polyfill.js#L273\n    // eslint-disable-next-line\n    String.prototype.padStart = function padStart(targetLength, padString) {\n        targetLength = targetLength >> 0; // floor if number or convert non-number to 0;\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\n        if (this.length > targetLength) {\n            return String(this);\n        } else {\n            targetLength = targetLength - this.length;\n            if (targetLength > padString.length) {\n                padString += padString.repeat(targetLength / padString.length); // append to original to ensure we are longer than needed\n            }\n            return padString.slice(0, targetLength) + String(this);\n        }\n    };\n}\n\nclass ChartView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chartHeight: null,\n            chartWidth: null,\n            paddings: {\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n            }\n        };\n\n        this.echartsReact = React.createRef();\n        // this.rangeRef     = React.createRef();\n\n        this.divRef = React.createRef();\n        this.divResetButton = React.createRef();\n\n        this.selected = null;\n\n        moment.locale(I18n.getLanguage());\n\n        this.lastIds = (this.props.config && this.props.config.l && this.props.config.l.map(item => item.id)) || [];\n        this.lastIds.sort();\n\n        this.chartOption = new ChartOption(moment, this.props.themeType, calcTextWidth, undefined, this.props.compact);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    updateProperties = props => {\n        this.updatePropertiesTimeout = null;\n        if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\n            const chartInstance = this.echartsReact.getEchartsInstance();\n            const lastIds = (props.config && props.config.l && props.config.l.map(item => item.id)) || [];\n            lastIds.sort();\n            const changed = JSON.stringify(lastIds) !== JSON.stringify(this.lastIds);\n            // If list of IDs changed => clear all settings\n            if (changed)  {\n                this.lastIds = lastIds;\n                chartInstance.clear();\n            }\n\n            this.option = this.chartOption.getOption(props.data, props.config, props.actualValues);\n            this.applySelected();\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] updateProperties: {min: ${this.option.xAxis[0].min}, ${this.option.xAxis[0].max}}`);\n            try {\n                chartInstance.setOption(this.option, changed);\n            } catch (e) {\n                console.error('Cannot apply options: ' + JSON.stringify(this.option));\n            }\n        }\n    };\n\n    UNSAFE_componentWillReceiveProps(props) {\n        if (props.data !== this.state.data) {\n            this.updatePropertiesTimeout && clearTimeout(this.updatePropertiesTimeout);\n            this.updatePropertiesTimeout = setTimeout(this.updateProperties, 100, props);\n        } else {\n            return null;\n        }\n    }\n\n    onResize = () => {\n        this.timerResize && clearTimeout(this.timerResize);\n\n        this.timerResize = setTimeout(() => {\n            this.timerResize = null;\n            this.componentDidUpdate();\n        });\n    };\n\n    /*onChange = (id, state) => {\n        if (id === this.props.obj._id &&\n            state &&\n            this.rangeValues &&\n            (!this.rangeValues.length || this.rangeValues[this.rangeValues.length - 1].ts < state.ts)) {\n\n            this.chartValues && this.chartValues.push({val: state.val, ts: state.ts});\n            this.rangeValues.push({val: state.val, ts: state.ts});\n\n            // update only if end is near to now\n            if (state.ts >= this.chart.min && state.ts <= this.chart.xMax + 300000) {\n                this.updateChart();\n            }\n        }\n    };*/\n\n    /*updateChart(start, end, withReadData, cb) {\n        if (start) {\n            this.start = start;\n        }\n        if (end) {\n            this.end = end;\n        }\n        start = start || this.start;\n        end   = end   || this.end;\n\n        this.readTimeout && clearTimeout(this.readTimeout);\n\n        this.readTimeout = setTimeout(() => {\n            this.readTimeout = null;\n\n            const diff = this.chart.xMax - this.chart.xMin;\n            if (diff !== this.chart.diff) {\n                this.chart.diff        = diff;\n                this.chart.withTime    = this.chart.diff < 3600000 * 24 * 7;\n                this.chart.withSeconds = this.chart.diff < 60000 * 30;\n            }\n\n            if (withReadData) {\n                this.readHistory(start, end)\n                    .then(values => {\n                        typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\n                            series: [{data: this.convertData(values)}],\n                            xAxis: {\n                                min: this.chart.xMin,\n                                max: this.chart.xMax,\n                            }\n                        }, true);\n                        cb && cb();\n                    });\n            } else {\n                typeof this.echartsReact.getEchartsInstance === 'function' && this.echartsReact.getEchartsInstance().setOption({\n                    series: [{data: this.convertData()}],\n                    xAxis: {\n                        min: this.chart.xMin,\n                        max: this.chart.xMax,\n                    }\n                }, true);\n                cb && cb();\n            }\n        }, 400);\n    }*/\n\n    setNewRange(updateChart) {\n        const chart = this.chartOption.getHelperChartData();\n        chart.diff        = chart.xMax - chart.xMin;\n        chart.withTime    = chart.diff < 3600000 * 24 * 7;\n        chart.withSeconds = chart.diff < 60000 * 30;\n\n        console.log(`[ChartView ] [${new Date().toISOString()}] setNewRange: ${!!updateChart}, {min: ${new Date(chart.xMin)}, max: ${new Date(chart.xMax)}}`);\n        if (updateChart) {\n            this.updateDataTimer && clearTimeout(this.updateDataTimer);\n            this.updateDataTimer = null;\n            this.props.onRangeChange && this.props.onRangeChange({start: chart.xMin, end: chart.xMax});\n        } else {\n            console.log(`[ChartView ] [${new Date().toISOString()}] setOption in setNewRange`);\n            this.option.xAxis[0].min = chart.xMin;\n            this.option.xAxis[0].max = chart.xMax;\n\n            try {\n                this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function' &&\n                this.echartsReact.getEchartsInstance().setOption({\n                    xAxis: {\n                        min: chart.xMin,\n                        max: chart.xMax,\n                    }\n                });\n            } catch (e) {\n                console.error('Cannot apply options 1: ' + JSON.stringify(this.option));\n            }\n        }\n    }\n\n    onMouseMove = e => {\n        if (this.mouseDown) {\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\n                 this.divResetButton.current.style.display = 'block';\n            }\n            const chart = this.chartOption.getHelperChartData();\n            const moved = chart.lastX - (e.offsetX - chart.padLeft);\n            chart.lastX = e.offsetX - chart.padLeft;\n            const diff = chart.xMax - chart.xMin;\n            const width = this.state.chartWidth - chart.padRight - chart.padLeft;\n\n            const shift = Math.round(moved * diff / width);\n            chart.xMin += shift;\n            chart.xMax += shift;\n            this.setNewRange();\n        }\n    };\n\n    onMouseDown = e => {\n        this.mouseDown = true;\n        const chart = this.chartOption.getHelperChartData();\n        chart.lastX = e.offsetX;\n        if (this.zr && !this.zr._mousemove) {\n            this.zr._mousemove = true;\n            this.zr.on('mousemove', this.onMouseMove);\n        }\n        const config = this.props.config;\n        if (config.live && this.props.onRangeChange) {\n            console.log('Stop update');\n            this.props.onRangeChange({stopLive: true});\n        }\n    };\n\n    onMouseUp = () => {\n        this.mouseDown = false;\n        this.setNewRange(true);\n        if (this.zr && this.zr._mousemove) {\n            this.zr._mousemove = false;\n            this.zr.off('mousemove', this.onMouseMove);\n        }\n    };\n\n    onMouseWheel = e => {\n        const chart = this.chartOption.getHelperChartData();\n        let diff = chart.xMax - chart.xMin;\n        const width = this.state.chartWidth - chart.padRight - chart.padLeft;\n        const x = e.offsetX - chart.padLeft;\n        const pos = x / width;\n\n        const oldDiff = diff;\n        const amount = e.wheelDelta > 0 ? 1.1 : 0.9;\n        diff = diff * amount;\n        const move = oldDiff - diff;\n        chart.xMax += move * (1 - pos);\n        chart.xMin -= move * pos;\n\n        this.setNewRange();\n        this.updateDataTimer && clearTimeout(this.updateDataTimer);\n        this.updateDataTimer = setTimeout(() => this.setNewRange(true), 1000);\n    };\n\n    onTouchStart = e => {\n        this.mouseDown = true;\n        const touches = e.touches || e.originalEvent.touches;\n        if (touches) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const chart = this.chartOption.getHelperChartData();\n            chart.lastX = touches[touches.length - 1].pageX;\n\n            if (touches.length > 1) {\n                chart.lastWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\n            } else {\n                chart.lastWidth = null;\n            }\n        }\n    };\n\n    onTouchEnd = e => {\n        if (this.mouseDown) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            this.mouseDown = false;\n            this.setNewRange(true);\n        }\n    };\n\n    onTouchMove = e => {\n        const touches = e.touches || e.originalEvent.touches;\n        if (!touches) {\n            return;\n        }\n        const chart = this.chartOption.getHelperChartData();\n        const pageX = touches[touches.length - 1].pageX - chart.padLeft;\n        if (this.mouseDown) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            if (this.divResetButton.current && this.divResetButton.current.style.display !== 'block') {\n                this.divResetButton.current.style.display = 'block';\n            }\n\n            if (touches.length > 1) {\n                console.log('touch move: ' + touches.length)\n                // zoom\n                const fingerWidth = Math.round(Math.abs(touches[0].pageX - touches[1].pageX));\n                if (chart.lastWidth !== null && fingerWidth !== chart.lastWidth) {\n                    let diff = chart.xMax - chart.xMin;\n                    const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\n\n                    const amount     = fingerWidth > chart.lastWidth ? 1.05 : 0.95;\n                    const positionX  = touches[0].pageX > touches[1].pageX ?\n                        touches[1].pageX - chart.padLeft + fingerWidth / 2 :\n                        touches[0].pageX - chart.padLeft + fingerWidth / 2;\n\n                    const pos = positionX / chartWidth;\n\n                    const oldDiff = diff;\n                    diff = diff * amount;\n                    const move = oldDiff - diff;\n\n                    console.log(`Move: ${Math.round(move / 1000)} => ${Math.round(move * pos / 1000)} -- ${Math.round(move * (1 - pos) / 1000)}`);\n\n                    chart.xMax += move * (1 - pos);\n                    chart.xMin -= move * pos;\n\n                    chart.xMax = Math.round(chart.xMax);\n                    chart.xMin = Math.round(chart.xMin);\n\n                    this.setNewRange();\n                }\n                chart.lastWidth = fingerWidth;\n            } else {\n                // swipe\n                const moved = chart.lastX - pageX;\n                const diff  = chart.xMax - chart.xMin;\n                const chartWidth = this.state.chartWidth - chart.padRight - chart.padLeft;\n\n                const shift = Math.round(moved * diff / chartWidth);\n                chart.xMin += shift;\n                chart.xMax += shift;\n\n                this.setNewRange();\n            }\n        }\n        chart.lastX = pageX;\n    };\n\n    installEventHandlers() {\n        this.zr = this.echartsReact && this.echartsReact.getEchartsInstance && this.echartsReact.getEchartsInstance().getZr();\n        const items = this.divRef.current && this.divRef.current.getElementsByClassName('echarts-for-react');\n        const div = items && items[0];\n\n        if (this.zr && this.props.config.zoom && !this.zr._iobInstalled) {\n            this.zr._iobInstalled = true;\n\n            if (!this.option || !this.option.useCanvas) {\n                this.zr.on('mousedown', this.onMouseDown);\n                this.zr.on('mouseup', this.onMouseUp);\n                this.zr.on('mousewheel', this.onMouseWheel);\n            } else if (div) {\n                div.addEventListener('touchstart', this.onTouchStart, false);\n                div.addEventListener('touchend', this.onTouchEnd, false);\n                div.addEventListener('touchmove', this.onTouchMove, false);\n            }\n        } else if (this.zr && !this.props.config.zoom && this.zr._iobInstalled) {\n            this.zr._iobInstalled = false;\n\n            if (!!this.option || !this.option.useCanvas) {\n                this.zr.off('mousedown', this.onMouseDown);\n                this.zr.off('mouseup', this.onMouseUp);\n                this.zr.off('mousewheel', this.onMouseWheel);\n                if (this.zr && this.zr._mousemove) {\n                    this.zr._mousemove = false;\n                    this.zr.off('mousemove', this.onMouseMove);\n                }\n            } else if (div) {\n                div.removeEventListener('touchstart', this.onTouchStart, false);\n                div.removeEventListener('touchend', this.onTouchEnd, false);\n                div.removeEventListener('touchmove', this.onTouchMove, false);\n            }\n        }\n    }\n\n    applySelected() {\n        // merge selected\n        if (this.selected && this.option.legend) {\n            Object.keys(this.selected).forEach(name => this.option.legend.selected[name] = this.selected[name]);\n        }\n    }\n\n    renderChart() {\n        if (this.props.data) {\n            this.option = this.option || this.chartOption.getOption(this.props.data, this.props.config, this.props.actualValues);\n\n            if (this.props.config.title) {\n                window.document.title = this.props.config.title;\n            } else if (this.props.config.presetId) {\n                window.document.title = this.props.config.presetId;\n            }\n\n            // console.log(JSON.stringify(this.option, null, 2));\n\n            this.debug && console.log(`[ChartView ] [${new Date().toISOString()}] render chart`);\n\n            this.applySelected();\n\n            return <ReactEchartsCore\n                ref={e => this.echartsReact = e}\n                echarts={ echarts }\n                option={ this.option }\n                notMerge={ true }\n                lazyUpdate={ true }\n                theme={ this.option.theme }\n                style={{ height: this.state.chartHeight + 'px', width: '100%' }}\n                opts={this.option && this.option.useCanvas ? undefined : { renderer: 'svg' }}\n                onEvents={ {\n                    /*datazoom: e => {\n                        const {startValue, endValue} = e.batch[0];\n                        this.updateChart(startValue, endValue, true);\n                    },*/\n                    legendselectchanged: e => {\n                        this.selected = JSON.parse(JSON.stringify(e.selected));\n                    },\n                    rendered: e => {\n                        !this.props.compact && this.props.config.zoom && this.installEventHandlers();\n                    }\n                }}\n            />;\n        } else {\n            return <LinearProgress/>;\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.divRef.current) {\n            const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\n            const borderPadding = parseFloat(this.props.config.border_padding) || 0;\n            const chartHeight = this.divRef.current.offsetHeight - (borderWidth + borderPadding) * 2;\n            if (this.state.chartHeight !== chartHeight) {\n                const chartWidth  = this.divRef.current.offsetWidth - (borderWidth + borderPadding) * 2;\n                setTimeout(() => this.setState({chartHeight, chartWidth}), 10);\n            }\n        }\n    }\n\n    renderResetButton() {\n        return <Fab\n            ref={ this.divResetButton }\n            size=\"small\"\n            color=\"default\"\n            style={{display: 'none'}}\n            className={this.props.classes.resetButton}\n            title={I18n.t('Reset pan and zoom')}\n            onClick={() => {\n                if (this.divResetButton.current) {\n                    this.divResetButton.current.style.display = 'none';\n                }\n                this.props.onRangeChange && this.props.onRangeChange();\n            }}\n        >\n            <IconReset className={this.props.classes.resetButtonIcon}/>\n        </Fab>;\n    }\n\n    renderExportButton() {\n        if (this.props.config.export) {\n            return <IconExport\n                color={this.props.config.exportColor || 'default'}\n                className={this.props.classes.exportButton}\n                title={this.option && this.option.useCanvas ? I18n.t('Save chart as png') : I18n.t('Save chart as svg')}\n                onClick={() => {\n                    if (this.echartsReact && typeof this.echartsReact.getEchartsInstance === 'function') {\n                        const chartInstance = this.echartsReact.getEchartsInstance();\n                        const base64 = chartInstance.getDataURL({\n                            pixelRatio: 2, // only for png\n                            backgroundColor: this.props.config.window_bg || (this.props.themeType === 'dark' ? '#000' : '#FFF'),\n                        });\n\n                        const downloadLink = document.createElement('a');\n                        document.body.appendChild(downloadLink);\n\n                        downloadLink.href = base64;\n                        downloadLink.target = '_self';\n                        let name = '';\n                        if (this.props.config.l.length === 1) {\n                            name = this.props.config.l[0].name;\n                        } else {\n                            name = 'chart';\n                        }\n                        const option = this.option;\n                        if (option &&\n                            option.series &&\n                            option.series[0] &&\n                            option.series[0].data &&\n                            option.series[0].data.length) {\n                            const date = new Date(option.xAxis[0].max || option.series[0].data[option.series[0].data.length - 1].value[0]);\n                            try {\n                                downloadLink.download =\n                                    `${date.getFullYear()}_${(date.getMonth() + 1).toString().padStart(2, '0')}_${date.getDate().toString().padStart(2, '0')}` +\n                                    `_${date.getHours().toString().padStart(2, '0')}_${date.getMinutes().toString().padStart(2, '0')}_${name}.${this.option && this.option.useCanvas ? 'png' : 'svg'}`;\n                                downloadLink.click();\n                            } catch (e) {\n                                console.error(`Cannot access download: ${e}`);\n                                window.alert(I18n.t('Unfortunately your browser does not support this feature'));\n                            }\n                        } else {\n                            window.alert(I18n.t('No data found'));\n                        }\n                    }\n                }}\n            />\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        if (!this.divRef.current) {\n            setTimeout(() => this.forceUpdate(), 10);\n        }\n\n        const borderWidth   = this.props.config.noBorder !== 'noborder' ? parseFloat(this.props.config.border_width) || 0 : 0;\n        const borderPadding = parseFloat(this.props.config.border_padding) || 0;\n\n        return <div\n            ref={ this.divRef }\n            className={ this.props.classes.chart }\n            style={{\n                borderWidth,\n                width:          borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2 + 1}px)` : undefined,\n                height:         borderWidth || borderPadding ? `calc(100% - ${(borderWidth + borderPadding) * 2}px)` : undefined,\n                background:     this.props.config.noBackground ? undefined : (this.props.config.window_bg || undefined),\n                borderColor:    this.props.config.noBorder !== 'noborder' ? this.props.config.border_color || undefined : undefined,\n                borderStyle:    this.props.config.noBorder !== 'noborder' && borderWidth ? this.props.config.border_style || 'solid' : 'hidden',\n                padding:        borderPadding || 0,\n            }}>\n            { this.renderExportButton() }\n            { this.renderResetButton() }\n            { this.state.chartHeight !== null ? this.renderChart() : null }\n        </div>;\n    }\n}\n\nChartView.propTypes = {\n    t: PropTypes.func,\n    lang: PropTypes.string,\n    config: PropTypes.object,\n    themeType: PropTypes.string,\n    data: PropTypes.array,\n    actualValues: PropTypes.array,\n    noAnimation: PropTypes.bool,\n    onRangeChange: PropTypes.func,\n    compact: PropTypes.bool,\n};\n\nexport default withWidth()(withStyles(styles)(ChartView));","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport { withTheme } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport MD5 from \"crypto-js/md5\";\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport Utils from '@iobroker/adapter-react/Components/Utils';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Connection, {PROGRESS, ERRORS} from '@iobroker/adapter-react/Connection';\nimport DialogError from '@iobroker/adapter-react/Dialogs/Error';\nimport theme from '@iobroker/adapter-react/Theme';\n\nimport '@iobroker/adapter-react/index.css';\n\nimport ChartModel from './Components/ChartModel';\nimport ChartView from './Components/ChartView';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n    },\n    progress: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n    }\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        const themeInstance = this.createTheme();\n\n        const query     = Utils.parseQuery(window.location.search);\n        const queryHash = Utils.parseQuery((window.location.hash || '').replace(/^#/,''));\n\n        this.state = {\n            connected:  false,\n            seriesData: null,\n            actualValues: null,\n            noLoader:   query.noLoader || queryHash.noLoader || false,\n            theme:      themeInstance,\n            themeName:  this.getThemeName(themeInstance),\n            themeType:  this.getThemeType(themeInstance),\n            noBackground: query.noBG || queryHash.noBG || false,\n            compact:    query.compact || queryHash.compact || false,\n        };\n\n        this.inEdit =\n            query.edit     === '1' || query.edit     === 1 || query.edit     === true || query.edit     === 'true' ||\n            queryHash.edit === '1' || queryHash.edit === 1 || queryHash.edit === true || queryHash.edit === 'true';\n\n        this.divRef      = React.createRef();\n        this.progressRef = React.createRef();\n        this.progressShown = true;\n\n        // init translations\n        const translations = {\n            'en': require('@iobroker/adapter-react/i18n/en'),\n            'de': require('@iobroker/adapter-react/i18n/de'),\n            'ru': require('@iobroker/adapter-react/i18n/ru'),\n            'pt': require('@iobroker/adapter-react/i18n/pt'),\n            'nl': require('@iobroker/adapter-react/i18n/nl'),\n            'fr': require('@iobroker/adapter-react/i18n/fr'),\n            'it': require('@iobroker/adapter-react/i18n/it'),\n            'es': require('@iobroker/adapter-react/i18n/es'),\n            'pl': require('@iobroker/adapter-react/i18n/pl'),\n            'zh-cn': require('@iobroker/adapter-react/i18n/zh-cn'),\n        };\n\n        const ownTranslations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n\n        // merge together\n        Object.keys(translations).forEach(lang => translations[lang] = Object.assign(translations[lang], ownTranslations[lang]));\n\n        I18n.setTranslations(translations);\n\n        try {\n            this.isIFrame = window.self !== window.top;\n        } catch (e) {\n            this.isIFrame = true;\n        }\n\n        this.socket = new Connection({\n            name: window.adapterName,\n            onProgress: progress => {\n                if (progress === PROGRESS.CONNECTING) {\n                    if (this.state.seriesData) {\n                        this.divRef.current && (this.divRef.current.style.opacity = 0.5);\n                        this.progressRef.current && (this.progressRef.current.style.display = 'block');\n                    } else {\n                        this.setState({connected: false});\n                    }\n                } else if (progress === PROGRESS.READY) {\n                    this.setState({connected: true});\n                    this.restoreAfterReconnection();\n                } else {\n                    this.setState({connected: true});\n                    this.restoreAfterReconnection();\n                }\n            },\n            onReady: (objects, scripts) => {\n                I18n.setLanguage(this.socket.systemLang);\n\n                this.socket.getSystemConfig()\n                    .then(systemConfig => {\n                        this.systemLang   = systemConfig?.common?.language || 'en';\n                        this.isFloatComma = systemConfig?.common?.isFloatComma || false;\n                        if (this.inEdit) {\n                            window.addEventListener('message', this.onReceiveMessage);\n                            if (window.self !== window.parent) {\n                                try {\n                                    window.parent.postMessage('chartReady','*');\n                                } catch (e) {\n                                    console.warn('Cannot send ready event to parent window');\n                                    console.error(e);\n                                }\n                            }\n                        } else {\n                            this.createChartData();\n                        }\n                    })\n                    .catch(err => {\n                        if (err === ERRORS.NOT_CONNECTED) {\n                            this.setState({connected: false});\n                        } else {\n                            this.showError(I18n.t(err));\n                        }\n                    })\n            },\n            onError: err => {\n                console.error(err);\n                this.showError(err);\n            }\n        });\n    }\n\n    restoreAfterReconnection() {\n        this.divRef.current && (this.divRef.current.style.opacity = 1);\n        this.progressRef.current && !this.progressShown && (this.progressRef.current.style.display = 'none');\n        if (this.state.seriesData && !this.state.seriesData.find(series => series.length)) {\n            this.chartData.setNewRange();\n        }\n    }\n\n    createChartData(config) {\n        this.chartData = new ChartModel(this.socket, config, {compact: this.state.compact});\n        this.chartData.onError(err => {\n            if (err === ERRORS.NOT_CONNECTED) {\n                this.divRef.current && (this.divRef.current.style.opacity = 0.5);\n                this.progressRef.current && (this.progressRef.current.style.display = 'block');\n            } else {\n                this.showError(I18n.t(err));\n            }\n        });\n        this.chartData.onReading(reading => this.showProgress(reading));\n        this.chartData.onUpdate((seriesData, actualValues) => {\n            const newState = {connected: true, dataLoaded: true};\n            seriesData   && (newState.seriesData   = seriesData);\n            actualValues && (newState.actualValues = actualValues);\n            this.setState(newState, () =>\n                this.showProgress(false));\n        });\n    }\n\n    showProgress(isShow) {\n        this.progressShown = isShow;\n        if (this.progressRef.current) {\n            this.progressRef.current.style.display = isShow ? 'block' : 'none';\n        }\n    }\n\n    componentWillUnmount() {\n        this.inEdit && window.removeEventListener('message', this.onReceiveMessage, false);\n        this.chartData && this.chartData.destroy();\n    }\n\n    onReceiveMessage = message => {\n        if (message && message.data !== 'chartReady') {\n            try {\n                const config = JSON.parse(message.data);\n                if (!this.chartData) {\n                    this.createChartData(config);\n                } else {\n                    this.chartData.setConfig(config);\n                }\n            } catch (e) {\n                return console.log('Cannot parse ' + message.data);\n            }\n        }\n    };\n\n    /**\n     * Get a theme\n     * @param {string} name Theme name\n     * @returns {Theme}\n     */\n    createTheme(name = '') {\n        return theme(Utils.getThemeName(name));\n    }\n\n    /**\n     * Get the theme name\n     * @param {Theme} theme Theme\n     * @returns {string} Theme name\n     */\n    getThemeName(theme) {\n        return theme.name;\n    }\n\n    /**\n     * Get the theme type\n     * @param {Theme} theme Theme\n     * @returns {string} Theme type\n     */\n    getThemeType(theme) {\n        return theme.palette.type;\n    }\n\n    showError(text) {\n        this.setState({errorText: text});\n    }\n\n    renderError() {\n        if (!this.state.errorText) {\n            return null;\n        } else {\n            return <DialogError classes={{}} text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!this.progressShown && this.progressRef.current && this.progressRef.current.style.display !== 'none') {\n            this.progressRef.current.style.display = 'none';\n        }\n    }\n\n    render() {\n        if (!this.state.connected || !this.state.seriesData) {\n            if (this.state.noLoader) {\n                return null;\n            } else {\n                return <MuiThemeProvider theme={this.state.theme}>\n                    <Loader theme={this.state.themeType}/>\n                </MuiThemeProvider>;\n            }\n        }\n\n        const config = this.chartData.getConfig();\n        // get IDs hash\n        const hash = MD5(JSON.stringify(((config && config.l && config.l.map(item => item.id)) || []).sort())).toString();\n\n        if (this.state.seriesData && config.debug) {\n            console.log('seriesData: ' + JSON.stringify(this.state.seriesData));\n        }\n\n        return <MuiThemeProvider theme={this.state.theme}>\n            <div ref={this.divRef}\n                 className={this.props.classes.root}\n                 style={{\n                     width: config.width,\n                     height: config.height,\n                     background: this.state.noBackground || config.noBackground ? undefined : this.state.theme.palette.background.default,\n                     color: this.state.theme.palette.text.primary\n                 }}>\n                <LinearProgress ref={this.progressRef} style={{display: 'block'}} className={this.props.classes.progress}/>\n                <ChartView\n                    key={hash}\n                    socket={this.socket}\n                    t={I18n.t}\n                    noAnimation={this.state.noLoader}\n                    data={this.state.seriesData}\n                    actualValues={this.state.actualValues}\n                    config={config}\n                    compact={this.state.compact}\n                    lang={I18n.getLanguage()}\n                    themeType={this.state.themeType}\n                    onRangeChange={options => this.chartData.setNewRange(options)}\n                />\n                {this.renderError()}\n            </div>\n        </MuiThemeProvider>;\n    }\n}\n\nexport default withWidth()(withStyles(styles)(withTheme(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { version } from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'echarts-show';\nlet themeName = Utils.getThemeName();\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\n// if not local development\nif (window.location.host !== 'localhost:3000') {\n    Sentry.init({\n        dsn: 'https://cf39325071144219aa91bb3510addcdf@sentry.iobroker.net/95',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ],\n        beforeSend: function (event, hint) {\n            let ignore = false;\n\n            // ignore errors from echarts lib\n            if (event.exception &&\n                event.exception.values &&\n                event.exception.values[0]) {\n                if (event.exception.values[0].type === 'NS_ERROR_FAILURE') {\n                    ignore = true;\n                } else if (event.exception.values[0].value) {\n                    if (event.exception.values[0].value.includes('Microsoft YaHei')) {\n                        ignore = true;\n                    } else if (event.exception.values[0].value === 'ResizeObserver loop completed with undelivered notifications.') {\n                        ignore = true;\n                    } else if (event.exception.values[0].value === `undefined is not an object (evaluating 't.get')`) {\n                        ignore = true;\n                    } else if (event.exception.values[0].value === `Cannot read property 'get' of undefined`) {\n                        ignore = true;\n                    } else if (event.exception.values[0].value === `this.painter is null`) {\n                        ignore = true;\n                    } else if (event.exception.values[0].value.includes('ioBroker is not connected')) {\n                        ignore = true;\n                    } else if (event.exception.values[0].value === `Cannot read property 'getDisplayList' of null`) {\n                        ignore = true;\n                    }\n                }\n            }\n\n            return ignore ? null : event;\n        },\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}