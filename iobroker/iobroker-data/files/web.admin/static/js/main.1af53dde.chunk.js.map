{"version":3,"sources":["Components/Toast.js","Components/CustomModal.js","Components/CustomSelect.js","Components/CustomInput.js","Components/CustomCheckbox.js","Tabs/Options.js","assets/le.png","Components/HintComponent.js","Tabs/Certificates.js","Tabs/WhiteList.js","Components/CustomButtonUpload.js","Tabs/Background.js","Tabs/Additionally.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","close","Toast","message","onClose","classes","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","ContentProps","id","I18n","t","action","IconButton","color","className","onClick","defaultProps","CustomModal","children","titleButton","titleButton2","buttonClick","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","Button","variant","autoFocus","CustomSelect","table","value","title","attr","options","style","native","onChange","noTranslate","themeType","FormControl","clsx","input","controlElement","Object","assign","paddingTop","Select","e","target","renderValue","_item","item","find","it","src","icon","Input","name","map","MenuItem","backgroundColor","Utils","getInvertedColor","undefined","FormHelperText","withStyles","minWidth","inputNumber","width","height","marginRight","CustomInput","styleComponentBlock","component","size","type","TextField","error","helperText","heightInput","margin","marginTop","CustomCheckbox","checked","FormControlLabel","control","Checkbox","el","label","Options","props","state","toast","ipAddressOptions","certificatesOptions","usersOptions","socketioOptions","openModal","loaded","this","instance","socket","host","common","getAdapterInstances","then","setState","_id","getRawSocket","emit","err","data","IPs4","family","IPs6","hardware","networkInterfaces","eth","hasOwnProperty","num","length","push","address","i","getCertificates","list","getUsers","prevProps","auth","secure","defaultUser","whiteListSettings","default","user","onLoad","LinearProgress","newCommon","JSON","parse","stringify","extIcon","tab","blockWarningContent","onError","text","errorText","column","columnSettings","ipInputStyle","blockWrapperCheckbox","blockWrapper","displayNone","filter","lang","end","replace","Component","display","flexDirection","minHeight","verticalAlign","flexFlow","blockWarning","background","padding","fontSize","alignItems","colorTheme","HintComponent","openLink","useState","setOpen","ClickAwayListener","onClickAway","Tooltip","arrow","placement","interactive","onOpen","Fab","boxShadow","marginLeft","Certificates","readme","logoWidth","alt","logo","window","baseObj","object","read","write","delete","create","file","WhiteList","optionsSelect","miniTableSelect","newObj","copyObj","keys","forEach","keyObj","validateIp","number","newKey","addProperty","keySearch","ip","indexOf","lastIndexOf","test","tableHeadArr","position","console","log","TableContainer","overflowX","Paper","Table","maxTable","TableHead","TableRow","TableCell","align","rowSpan","buttonAdd","fontWeight","colSpan","index","TableBody","backgroundTheme","borderBottom","buttonRemove","tableInput","tableSelect","elProperty","indexProperty","Boolean","checkBoxStyle","miniTable","top","left","zIndex","card","lineHeight","textAlign","element","indexEl","newTableHeadArr","splice","elhed","ind","button","marginBottom","border","borderRadius","root","spacing","CustomButtonUpload","valueFileUpload","setValueFileUpload","accept","multiple","files","dataTransfer","htmlFor","Background","imgSRC","readFile","arrayBufferView","Uint8Array","blob","Blob","URL","webkitURL","createObjectURL","Date","now","callback","reader","FileReader","onload","result","readAsArrayBuffer","justifyContent","a","uploadFile","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","dropZone","dropZoneActive","imgStyle","fontFamily","transition","outline","maxHeight","Additionally","defaultRedirect","arrayTabName","translate","App","extendedProps","encryptedFields","translations","require","selectedTab","settings","certPublic","certPrivate","toString","updateNativeValue","adapterName","cb","nameTab","palette","primary","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","disabled","checkDisabledTabs","isIFrame","tabContentIFrame","tabContent","renderTab","renderError","renderSaveCloseButtons","GenericApp","overflow","location","hostname","match","themeName","getThemeName","version","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1af53dde.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport { IconButton, Snackbar } from '@material-ui/core';\n\nimport { MdClose as IconClose } from 'react-icons/md';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst useStyles = makeStyles((theme) => ({\n    close: {\n\n    }\n}));\n\nconst Toast = ({ message, onClose }) => {\n    const classes = useStyles();\n    if (!message) {\n        return null;\n    }\n    return <Snackbar\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        open={true}\n        autoHideDuration={6000}\n        onClose={onClose}\n        ContentProps={{'aria-describedby': 'message-id',}}\n        message={<span id=\"message-id\">{I18n.t(message)}</span>}\n        action={[\n            <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                className={classes.close}\n                onClick={onClose}\n            >\n                <IconClose />\n            </IconButton>,\n        ]}\n    />;\n}\n\nToast.defaultProps = {\n    message: '',\n    onClose: () => { }\n};\n\nToast.propTypes = {\n    onClose: PropTypes.func,\n    message: PropTypes.string\n};\n\nexport default Toast;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst CustomModal = ({ open, close, children, titleButton, titleButton2, buttonClick }) => {\n    return <Dialog\n        open={open}\n        maxWidth=\"md\"\n        onClose={close}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n    >\n        <DialogTitle id=\"alert-dialog-title\">{I18n.t('Warning')}</DialogTitle>\n        <DialogContent>\n            {children}\n        </DialogContent>\n        <DialogActions>\n            {titleButton && <Button variant=\"contained\" onClick={buttonClick}>\n                {titleButton}\n            </Button>}\n            {titleButton2 && <Button variant=\"contained\" onClick={close} color=\"primary\" autoFocus>\n                {titleButton2}\n            </Button>}\n        </DialogActions>\n    </Dialog>;\n}\n\nCustomModal.defaultProps = {\n    open: false,\n    buttonClick: () => { },\n    close: () => { }\n};\n\nCustomModal.propTypes = {\n    open: PropTypes.bool,\n    close: PropTypes.func,\n    children: PropTypes.any,\n    titleButton: PropTypes.string,\n    titleButton2: PropTypes.string,\n    buttonClick: PropTypes.func\n};\n\nexport default CustomModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { FormControl, FormHelperText, Input, MenuItem, Select, withStyles } from '@material-ui/core';\n\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Icon from '@iobroker/adapter-react/Components/Icon';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    },\n    inputNumber: {\n        minWidth: 150\n    },\n    icon: {\n        width: 24,\n        height: 24,\n        marginRight: 8\n    }\n});\n\nconst CustomSelect = ({ table, value, title, attr, options, style, classes, native, onChange, className, noTranslate, themeType }) => {\n    return <FormControl\n        className={clsx(classes.input, classes.controlElement, className)}\n        style={Object.assign({ paddingTop: 5 }, style)}\n    >\n        <Select\n            value={table ? value : native[attr] || '_'}\n            onChange={e => {\n                if (table) {\n                    onChange(e.target.value);\n                } else {\n                    onChange(attr, e.target.value === '_' ? '' : e.target.value)\n                }\n            }}\n            renderValue={_item => {\n                const item = options.find(it => it.value === _item);\n                return item ? <>\n                    <Icon src={item.icon} className={classes.icon}/>\n                    {noTranslate ? item.title : I18n.t(item.title)}\n                </> : _item\n            }}\n            input={<Input name={attr} id={attr + '-helper'} />}\n        >\n            {options.map(item =>\n                <MenuItem key={'key-' + item.value} value={item.value || '_'} style={item.color ? {color: item.color, backgroundColor: Utils.getInvertedColor ? Utils.getInvertedColor(item.color, themeType) : undefined} : {}}>\n                    <Icon src={item.icon} className={classes.icon}/>\n                    {noTranslate ? item.title : I18n.t(item.title)}\n                </MenuItem>)}\n        </Select>\n        <FormHelperText>{I18n.t(title)}</FormHelperText>\n    </FormControl>;\n}\n\nCustomSelect.defaultProps = {\n    value: '',\n    className: null,\n    table: false\n};\n\nCustomSelect.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string,\n    options: PropTypes.array.isRequired,\n    style: PropTypes.object,\n    native: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    noTranslate: PropTypes.bool,\n    themeType: PropTypes.string\n};\n\nexport default withStyles(styles)(CustomSelect);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { FormControl, FormHelperText, TextField, withStyles } from '@material-ui/core';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    },\n    inputNumber: {\n        minWidth: 150\n    },\n    heightInput: {\n        height: 30\n    }\n});\n\nconst CustomInput = ({ styleComponentBlock, component, size, variant, table, value, title, attr, type, style, classes, native, onChange, className }) => {\n    const error = false;\n    return <FormControl\n        className={clsx(type === 'number' ? classes.inputNumber : classes.input + ' ' + classes.controlElement, className)}\n        style={Object.assign({ paddingTop: 5 }, style)}\n    >\n        <TextField\n            error={!!error}\n            variant={variant}\n            value={table ? value : native[attr]}\n            type={type}\n            helperText={error || ''}\n            style={style}\n            className={classes.heightInput}\n            onChange={e => {\n                if (table) {\n                    onChange(e.target.value);\n                } else {\n                    onChange(attr, e.target.value);\n                }\n            }}\n            margin=\"normal\"\n            size={size}\n        />\n        <div style={styleComponentBlock}>\n            <FormHelperText style={{ marginTop: -3 }}>{I18n.t(title)}</FormHelperText>\n            {component}\n        </div>\n    </FormControl>;\n}\n\nCustomInput.defaultProps = {\n    value: '',\n    type: 'text',\n    className: null,\n    table: false,\n    native: {},\n    variant: 'standard',\n    size: 'medium',\n    component: null,\n    styleComponentBlock: null\n};\n\nCustomInput.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string,\n    type: PropTypes.string,\n    style: PropTypes.object,\n    native: PropTypes.object,\n    onChange: PropTypes.func,\n    component: PropTypes.object,\n    styleComponentBlock: PropTypes.object\n};\n\nexport default withStyles(styles)(CustomInput);","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport { Checkbox, FormControlLabel, withStyles } from '@material-ui/core';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst styles = theme => ({\n    input: {\n        minWidth: 300\n    }\n});\n\nconst CustomCheckbox = ({ title, attr, style, classes, native, onChange, className, table, checked }) => {\n    return <FormControlLabel\n        key={attr}\n        style={Object.assign({ paddingTop: 5 }, style)}\n        className={clsx(classes.controlElement, className)}\n        control={\n            <Checkbox\n                checked={table ? checked : native[attr]}\n                onChange={el => {\n                    if (table) {\n                        onChange(el.target.checked);\n                    } else {\n                        onChange(attr, !native[attr]);\n                    }\n                }}\n                color=\"primary\"\n            />\n        }\n        label={I18n.t(title)}\n    />;\n}\n\nCustomCheckbox.defaultProps = {\n    table: false,\n    className: null\n};\n\nCustomCheckbox.propTypes = {\n    title: PropTypes.string,\n    attr: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    native: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    table: PropTypes.bool\n};\n\nexport default withStyles(styles)(CustomCheckbox);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport { LinearProgress } from '@material-ui/core';\n\nimport Security from '@material-ui/icons/Security';\n\nimport Logo from '@iobroker/adapter-react/Components/Logo';\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport Toast from '../Components/Toast';\nimport CustomModal from '../Components/CustomModal';\nimport CustomSelect from '../Components/CustomSelect';\nimport CustomInput from '../Components/CustomInput';\nimport CustomCheckbox from '../Components/CustomCheckbox';\n\nconst styles = theme => ({\n    blockWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginRight: 20,\n        '@media screen and (max-width: 360px)': {\n            marginRight: 0\n        }\n    },\n    displayNone: {\n        display: 'none !important'\n    },\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    blockWrapperCheckbox: {\n        display: 'flex',\n        flexFlow: 'wrap'\n    },\n    ipInputStyle: {\n        marginTop: 10,\n        width: 900,\n        marginRight: 20,\n        '@media screen and (max-width: 940px)': {\n            width: '100%'\n        }\n    },\n    blockWarning: {\n        background: '#2196f3',\n        color: '#fff',\n        margin: '20px 2px',\n        padding: 8,\n        fontSize: 20\n    },\n    blockWarningContent: {\n        flexFlow: 'wrap',\n        display: 'flex',\n        alignItems: 'flex-end'\n    }\n});\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: [],\n            certificatesOptions: [],\n            usersOptions: [],\n            socketioOptions: [\n                { title: I18n.t('nothing'), value: 'none' },\n                { title: I18n.t('built_in'), value: '_' }\n            ],\n            openModal: false,\n            loaded: 0,\n        };\n    }\n\n    componentDidMount() {\n        const { instance, socket, common: { host } } = this.props;\n        const { socketioOptions } = this.state;\n        let loaded = 0;\n        socket.getAdapterInstances('socketio')\n            .then(state =>\n                this.setState({ loaded: ++loaded, socketioOptions: [...socketioOptions, ...state\n                        .map(({ _id, common: { name } }) => ({ title: `${name} [${name}.${instance}]`, value: _id }))] }));\n\n        socket.getRawSocket().emit('getHostByIp', host, (err, data) => {\n            if (data) {\n                let IPs4 = [{ title: `[IPv4] 0.0.0.0 - ${I18n.t('open_ip')}`, value: '0.0.0.0', family: 'ipv4' }];\n                let IPs6 = [{ title: '[IPv6] ::', value: '::', family: 'ipv6' }];\n                if (data.native.hardware && data.native.hardware.networkInterfaces) {\n                    for (let eth in data.native.hardware.networkInterfaces) {\n                        if (!data.native.hardware.networkInterfaces.hasOwnProperty(eth)) {\n                            continue;\n                        }\n                        for (let num = 0; num < data.native.hardware.networkInterfaces[eth].length; num++) {\n                            if (data.native.hardware.networkInterfaces[eth][num].family !== 'IPv6') {\n                                IPs4.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv4' });\n                            } else {\n                                IPs6.push({ title: `[${data.native.hardware.networkInterfaces[eth][num].family}] ${data.native.hardware.networkInterfaces[eth][num].address} - ${eth}`, value: data.native.hardware.networkInterfaces[eth][num].address, family: 'ipv6' });\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < IPs6.length; i++) {\n                    IPs4.push(IPs6[i]);\n                }\n                this.setState({ loaded: ++loaded, ipAddressOptions: IPs4 });\n            }\n        });\n\n        socket.getCertificates()\n            .then(list =>\n                this.setState({ loaded: ++loaded,certificatesOptions: list }));\n\n        socket.getUsers()\n            .then(list =>\n                this.setState({ loaded: ++loaded, usersOptions: list }));\n    }\n\n    componentDidUpdate(prevProps) {\n        const { native: { auth, secure } } = prevProps;\n        const { native: { defaultUser, whiteListSettings }, onChange } = this.props;\n\n        if (!this.props.native.auth && (auth !== this.props.native.auth)) {\n            onChange('whiteListSettings.default.user', defaultUser);\n        } else if (whiteListSettings && whiteListSettings.default.user !== 'auth' && (auth !== this.props.native.auth)) {\n            onChange('whiteListSettings.default.user', 'auth');\n        }\n        if (defaultUser !== prevProps.native.defaultUser) {\n            onChange('whiteListSettings.default.user', defaultUser);\n        }\n        if (!this.props.native.secure && this.props.native.auth && !this.state.openModal && ((auth !== this.props.native.auth) || (secure !== this.props.native.secure))) {\n            this.setState({ openModal: true });\n        }\n    }\n\n    render() {\n        const { instance, common, classes, native, onLoad, onChange } = this.props;\n        const { certificatesOptions, ipAddressOptions, usersOptions, openModal, toast, socketioOptions, loaded } = this.state;\n\n        if (loaded < 4) {\n            return <LinearProgress />;\n        }\n\n        let newCommon = JSON.parse(JSON.stringify(common));\n        newCommon.icon = newCommon.extIcon;\n\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <CustomModal\n                open={ openModal }\n                buttonClick={() => {\n                    onChange('auth', false);\n                    this.setState({ openModal: !openModal });\n                    this.setState({ toast: 'Authentication_deactivated' });\n                }}\n                close={() => this.setState({ openModal: !openModal })}\n                titleButton={I18n.t('button_title')}\n                titleButton2={I18n.t('button_title2')}>\n                <div className={classes.blockWarningContent}><Security style={{ width: 32, height: 32 }} />{I18n.t('modal_title')}</div>\n            </CustomModal>\n            <Logo\n                instance={instance}\n                classes={undefined}\n                common={newCommon}\n                native={native}\n                onError={text => this.setState({ errorText: text })}\n                onLoad={onLoad}\n            />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomSelect\n                        title='IP address'\n                        attr='bind'\n                        noTranslate\n                        className={classes.ipInputStyle}\n                        options={ipAddressOptions}\n                        native={native}\n                        onChange={onChange}\n                    />\n                    <CustomInput\n                        title='port'\n                        attr='port'\n                        type='number'\n                        style={{ marginTop: 5 }}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className={classes.blockWrapperCheckbox}>\n                    <div className={classes.blockWrapper}>\n                        <CustomCheckbox\n                            title='encryption'\n                            attr='secure'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='authentication'\n                            attr='auth'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            className={native['auth'] ? null : classes.displayNone}\n                            title='basic_authentication'\n                            attr='basicAuth'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='cache'\n                            attr='cache'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomSelect\n                            title='socket'\n                            attr='socketio'\n                            noTranslate\n                            options={ socketioOptions }\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={classes.blockWrapper}>\n                        <div className={`${classes.blockWrapperCheckbox} ${native['secure'] ? null : classes.displayNone}`} >\n                            <CustomSelect\n                                title='public_certificate'\n                                attr='certPublic'\n                                noTranslate\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' },\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'public').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10, marginRight: 20 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                            <CustomSelect\n                                title='private_certificate'\n                                attr='certPrivate'\n                                noTranslate\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' },\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'private').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10, marginRight: 20 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                            <CustomSelect\n                                title='chained_certificate'\n                                attr='certChained'\n                                noTranslate\n                                options={[\n                                    { title: I18n.t('nothing'), value: '' },\n                                    ...certificatesOptions.filter(({ type }) => !type || type === 'chained').map(({ name }) => ({ title: name, value: name }))\n                                ]}\n                                style={{ marginTop: 10 }}\n                                native={native}\n                                onChange={onChange}\n                            />\n                        </div>\n                        <CustomSelect\n                            className={!native['auth'] ? null : classes.displayNone}\n                            title='users'\n                            attr='defaultUser'\n                            themeType={this.props.themeType}\n                            noTranslate\n                            options={usersOptions.map(({ _id, common: { name, color, icon } }) => ({\n                                title: typeof name === 'object' ? name[this.props.lang] || name.end || _id.replace(/^system\\.user\\./, '') : name,\n                                value: _id.replace(/^system\\.user\\./, ''),\n                                color,\n                                icon\n                            }))}\n                            style={{ marginTop: 10, width: 300 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomInput\n                            className={native['auth'] ? null : classes.displayNone}\n                            title='time_out'\n                            attr='ttl'\n                            type='number'\n                            style={{ marginTop: -1, width: 300 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            title='simple_api'\n                            attr='simpleapi'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                        <CustomCheckbox\n                            className={native['socketio'] === '' ? null : classes.displayNone}\n                            title='web_sockets'\n                            attr='forceWebSockets'\n                            style={{ marginTop: 10 }}\n                            native={native}\n                            onChange={onChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nOptions.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n};\n\nexport default withStyles(styles)(Options);","export default __webpack_public_path__ + \"static/media/le.eb63b1db.png\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ClickAwayListener, Fab, makeStyles, Tooltip } from '@material-ui/core';\n\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst useStyles = makeStyles(({ name }) => ({\n    colorTheme: {\n        color: name === 'dark' ? '#a2a2a2;' : '#c0c0c0',\n        backgroundColor: name === 'dark' ? '#ffffff00' : '#ffffff'\n    }\n}));\n\nconst HintComponent = ({ children, openLink, style }) => {\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    return <ClickAwayListener onClickAway={() => setOpen(false)}>\n        <Tooltip\n            arrow\n            placement=\"top\"\n            title={I18n.t(children)}\n            interactive\n            open={open}\n            onOpen={() => setOpen(true)}\n        >\n            <Fab\n                className={classes.colorTheme}\n                style={Object.assign({\n                    boxShadow: 'none',\n                    marginLeft: 10,\n                    width: 20,\n                    height: 20,\n                    minHeight: 20,\n                }, style)}\n                size=\"small\" aria-label=\"like\"\n                onClick={() => {\n                    setOpen(!open);\n                    openLink();\n                }}\n            >\n                <HelpOutlineOutlinedIcon />\n            </Fab>\n        </Tooltip>\n    </ClickAwayListener>;\n}\n\nHintComponent.propTypes = {\n    children: PropTypes.string,\n    openLink: PropTypes.func,\n    style: PropTypes.object\n};\n\nHintComponent.defaultProps = {\n    children: 'link',\n    openLink: () => { },\n    style: {}\n};\n\nexport default HintComponent;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport logo from '../assets/le.png';\n\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport CustomInput from '../Components/CustomInput';\nimport HintComponent from '../Components/HintComponent';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)'\n    },\n    logoWidth: {\n        width: 200\n    },\n    fontSize: {\n        '@media screen and (max-width: 460px)': {\n            '& > *': {\n                fontSize: '3.2vw',\n            }\n        }\n    }\n\n});\n\nclass Certificates extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: []\n        };\n    }\n\n    render() {\n        const { classes, native, onChange, common: { readme } } = this.props;\n        return <form className={classes.tab}>\n            <img className={classes.logoWidth} alt='logo' src={logo} />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomCheckbox\n                        title='use_certificates'\n                        attr='leEnabled'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                    <HintComponent openLink={() =>\n                        window.open(`${readme}#lets-encrypt-certificates`, '_blank')} />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='renew_certificates'\n                        attr='leUpdate'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leUpdate'] && native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomInput\n                        title='domain_name'\n                        attr='lePort'\n                        type='number'\n                        style={{ marginTop: -1 }}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='use_lets'\n                        attr='leStaging'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nCertificates.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Certificates);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport CustomInput from '../Components/CustomInput';\nimport CustomSelect from '../Components/CustomSelect';\nimport Toast from '../Components/Toast';\n\nconst styles = ({ name }) => ({\n    backgroundTheme: {\n        background: name === 'dark' ? '#3e3838' : '#dcdcdc'\n    },\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    button: {\n        marginRight: 20,\n        marginBottom: 40,\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top'\n    },\n    columnSettings: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 700,\n        '& td': {\n            padding: 2\n        }\n    },\n    displayNone: {\n        display: 'none'\n    },\n    checkBoxStyle: {\n        marginLeft: 0,\n        marginRight: 0\n    },\n    miniTable: {\n        display: 'none'\n    },\n    card: {\n        padding: 1,\n        margin: '20px 0',\n        border: '1px solid',\n        borderRadius: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    '@media screen and (max-width: 1700px)': {\n        table: {\n            '& th': {\n                padding: 2\n            }\n        }\n    },\n    '@media screen and (max-width: 1280px)': {\n        miniTable: {\n            display: 'block'\n        },\n        maxTable: {\n            display: 'none'\n        },\n        table: {\n            minWidth: 300\n        },\n        miniTableSelect: {\n            minWidth: 185\n        }\n    }\n});\n\nconst baseObj = {\n    user: 'admin',\n    object: {\n        read: true,\n        list: true,\n        write: true,\n        delete: true\n    },\n    state: {\n        read: true,\n        list: true,\n        write: true,\n        create: true,\n        delete: true\n    },\n    file: {\n        read: true,\n        list: true,\n        write: true,\n        create: true,\n        delete: true\n    }\n}\nclass WhiteList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            usersOptions: []\n        };\n    }\n\n    componentDidMount() {\n        const { socket } = this.props;\n        socket.getUsers()\n            .then(list =>\n                this.setState({ usersOptions: list }));\n    }\n\n    tableSelect(el, style) {\n        const { classes, native, onChange } = this.props;\n        const { usersOptions } = this.state;\n        const { whiteListSettings } = native;\n        if (el === 'default') {\n            return whiteListSettings[el].user;\n        }\n        const optionsSelect = whiteListSettings.default.user === 'auth' ? [{ title: 'auth', value: 'auth' }] : [];\n        return <CustomSelect\n            table\n            value={whiteListSettings[el].user}\n            options={[...optionsSelect, ...usersOptions.map(({ _id, common: { name} }) => ({ title: name, value: _id.replace('system.user.', '') }))]}\n            native={native}\n            style={style}\n            className={classes.miniTableSelect}\n            onChange={(e) => {\n                const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                newObj[el].user = e;\n                onChange('whiteListSettings', newObj);\n            }}\n        />\n    }\n\n    tableInput(el, style) {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        if (el === 'default') {\n            return el;\n        }\n        return <CustomInput\n            table\n            value={el}\n            style={style}\n            onChange={(e) => {\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\n                let newObj = {};\n                Object.keys(copyObj).forEach(keyObj => {\n                    if (keyObj === el) {\n                        newObj[e] = copyObj[keyObj];\n                    } else {\n                        newObj[keyObj] = copyObj[keyObj];\n                    }\n                });\n                if (!this.validateIp(e)) {\n                    this.setState({ toast: 'incorrect_ip' });\n                } else {\n                    onChange('whiteListSettings', newObj);\n                }\n            }}\n        />\n    }\n\n    buttonAdd() {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n\n        return <IconButton color=\"primary\" onClick={() => {\n            let newObj = JSON.parse(JSON.stringify(whiteListSettings));\n            let number = 1;\n            let newKey = '192.168.0.1';\n            const addProperty = () => {\n                if (Object.keys(newObj).find(keySearch => keySearch === newKey)) {\n                    newKey = `192.168.0.${number}`;\n                    number = number + 1;\n                    addProperty();\n                }\n            }\n            addProperty();\n            newObj = Object.assign({ [newKey]: baseObj }, newObj);\n            onChange('whiteListSettings', newObj);\n        }}>\n            <AddCircleIcon />\n        </IconButton>;\n    }\n\n    buttonRemove(el) {\n        const { native, onChange } = this.props;\n        const { whiteListSettings } = native;\n\n        return <IconButton\n            color=\"primary\"\n            onClick={() => {\n                const copyObj = JSON.parse(JSON.stringify(whiteListSettings));\n                delete copyObj[el];\n                onChange('whiteListSettings', copyObj);\n            }}\n            style={el === 'default' ? { display: 'none' } : null}\n            aria-label=\"delete\"\n        >\n            <DeleteIcon />\n        </IconButton>;\n    }\n\n    validateIp(ip) {\n        if (ip.indexOf('*') !== -1 && ip.lastIndexOf('.') > ip.indexOf('*')) {\n            return false;\n        }\n        let expression = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/;\n        return expression.test(ip.replace('*', '111'));\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        const { whiteListSettings } = native;\n        const { toast } = this.state;\n        const tableHeadArr = ['to_read', 'list', 'write', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete', 'to_read', 'list', 'write', 'to_create', 'delete'];\n\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <div style={{ position: 'relative' }} className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomCheckbox\n                        title='included'\n                        attr='whiteListEnabled'\n                        native={native}\n                        onChange={(attr, value) => {\n                            console.log(attr,  value)\n                            onChange(attr, value, () => {\n                                if (value && !native.whiteListSettings) {\n                                    onChange('whiteListSettings', {\n                                        default: {\n                                            user: \"admin\",\n                                            object: {\n                                                read: true,\n                                                list: true,\n                                                write: true,\n                                                delete: true\n                                            },\n                                            state: {\n                                                read: true,\n                                                list: true,\n                                                write: true,\n                                                create: true,\n                                                delete: true\n                                            },\n                                            file: {\n                                                read: true,\n                                                list: true,\n                                                write: true,\n                                                create: true,\n                                                delete: true\n                                            }\n                                        }\n                                    });\n                                }\n                            })\n                        }}\n                    />\n                </div>\n                {whiteListSettings ? <div className={native['whiteListEnabled'] ? null : classes.displayNone}>\n                    <TableContainer style={{ overflowX: 'visible' }} component={Paper}>\n                        <Table className={`${classes.table} ${classes.maxTable}`} aria-label=\"spanning table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\" rowSpan={2}>{this.buttonAdd()}</TableCell>\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>IP</TableCell>\n                                    <TableCell align=\"center\" rowSpan={2} style={{ fontWeight: 'bold' }}>{I18n.t('user')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={4} style={{ fontWeight: 'bold' }}>{I18n.t('object')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('status')}</TableCell>\n                                    <TableCell align=\"center\" colSpan={5} style={{ fontWeight: 'bold' }}>{I18n.t('file')}</TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    {tableHeadArr.map((el, index) =>\n                                        <TableCell key={`${el}_${index}_max`} align=\"center\">{I18n.t(el)}</TableCell>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {Object.keys(whiteListSettings).map((el, index) => {\n                                    return <TableRow key={`${index}_max`}>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.buttonRemove(el)}\n                                        </TableCell>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.tableInput(el, { marginTop: -1, minWidth: 150, paddingTop: 5 })}\n                                        </TableCell>\n                                        <TableCell className={classes.backgroundTheme} style={{ borderBottom: '1px solid #afafaf' }}>\n                                            {this.tableSelect(el, { marginTop: -1 })}\n                                        </TableCell>\n                                        {['object', 'state', 'file'].map((elProperty, indexProperty) => Object.keys(whiteListSettings[el][elProperty]).map((attr, index) =>\n                                            <TableCell className={Boolean(indexProperty % 2) ? classes.backgroundTheme : null} style={{ borderBottom: Boolean(indexProperty % 2) ? '1px solid #afafaf' : null }} key={`${elProperty}_${attr}_max`} align=\"center\">\n                                                <CustomCheckbox\n                                                    table\n                                                    checked={whiteListSettings[el][elProperty][attr]}\n                                                    attr={attr}\n                                                    native={native}\n                                                    className={classes.checkBoxStyle}\n                                                    onChange={(e) => {\n                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                                                        newObj[el][elProperty][attr] = e;\n                                                        onChange('whiteListSettings', newObj);\n                                                    }}\n                                                />\n                                            </TableCell>))}\n                                    </TableRow>\n                                })}\n                            </TableBody>\n                        </Table>\n                        <div className={classes.miniTable}>\n                            <div className={classes.backgroundTheme} style={{ position: 'sticky', top: -10, left: 12, zIndex: 22, borderBottom: '1px solid' }}>\n                                {this.buttonAdd()}\n                            </div>\n                            <div>\n                                {Object.keys(whiteListSettings).map((el, index) => {\n                                    return <div\n                                        key={`${index}_wrapper`}\n                                        className={`${classes.card} ${Boolean(index % 2) ? classes.backgroundTheme : null}`}\n                                    >\n                                        <div style={{ width: '100%', lineHeight: '30px', textAlign: 'center' }}>\n                                            <span>{this.buttonRemove(el)}</span>\n                                            <span style={{ marginLeft: 10 }}>IP: {this.tableInput(el, { marginTop: -5, minWidth: 150, marginLeft: 5, verticalAlign: 'middle' })}</span>\n                                            <span style={{ marginLeft: 20 }}>{I18n.t('user')}: {this.tableSelect(el, { marginTop: -10, marginLeft: 5, verticalAlign: 'middle' })}</span>\n                                        </div>\n                                        {['object', 'state', 'file'].map((element, indexEl) => {\n                                            let newTableHeadArr = [...tableHeadArr].splice(indexEl === 0 ? 0 : 4, indexEl === 0 ? 4 : 5)\n                                            return <Table key={`${indexEl}_mini`} className={classes.table} style={{ width: 'inherit' }} aria-label=\"spanning table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell style={{ background: '#bbbbbb' }} align=\"center\" colSpan={Object.keys(whiteListSettings[el][element]).length}>\n                                                            {I18n.t(['object', 'status', 'file'][indexEl])}</TableCell>\n                                                    </TableRow>\n                                                    <TableRow>\n                                                        {newTableHeadArr.map((elhed, ind) => (<TableCell key={`${elhed}_${ind}_mini`} align=\"center\">\n                                                            {I18n.t(elhed)}</TableCell>))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    <TableRow>\n                                                        {Object.keys(whiteListSettings[el][element]).map((attr) =>\n                                                            <TableCell key={`${element}_${attr}_mini_check`} align=\"center\">\n                                                                <CustomCheckbox\n                                                                    table\n                                                                    checked={whiteListSettings[el][element][attr]}\n                                                                    attr={attr}\n                                                                    native={native}\n                                                                    className={classes.checkBoxStyle}\n                                                                    onChange={(e) => {\n                                                                        const newObj = JSON.parse(JSON.stringify(whiteListSettings));\n                                                                        newObj[el][element][attr] = e;\n                                                                        onChange('whiteListSettings', newObj);\n                                                                    }}\n                                                                />\n                                                            </TableCell>)}\n                                                    </TableRow>\n                                                </TableBody>\n                                            </Table>\n                                        })}</div>\n                                })}\n                            </div>\n                        </div>\n                    </TableContainer>\n                </div> : null}\n            </div>\n        </form>;\n    }\n}\n\nWhiteList.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(WhiteList);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst CustomButtonUpload = ({ title, onChange }) => {\n    const classes = useStyles();\n    const [valueFileUpload, setValueFileUpload] = useState('');\n    return <div className={classes.root}>\n        <input\n            accept=\"image/*\"\n            className={classes.input || ''}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={(e) => {\n                onChange(e.target.files[0] || e.dataTransfer.files[0], name =>\n                    setValueFileUpload(name));\n            }}\n        />\n        <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                {I18n.t(title)}\n            </Button>\n            <TextField style={{ marginLeft: 20 }} value={valueFileUpload} />\n        </label>\n    </div>;\n}\n\nexport default CustomButtonUpload;","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport Toast from '../Components/Toast';\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport CustomInput from '../Components/CustomInput';\nimport CustomButtonUpload from '../Components/CustomButtonUpload';\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)',\n    },\n    dropZone: {\n        marginTop: 30,\n        width: 600,\n        border: '2px dashed #bbb',\n        borderRadius: 5,\n        padding: 25,\n        textAlign: 'center',\n        fontSize: '20pt',\n        fontWeight: 'bold',\n        fontFamily: 'Arial',\n        color: '#bbb',\n        minWidth: 320,\n        minHeight: 200,\n        transition: 'background 1s',\n        '&:focus': {\n            outline: 'inherit'\n        }\n    },\n    dropZoneActive: {\n        background: '#d6d6d69c'\n    },\n    imgStyle: {\n        maxWidth: 500,\n        maxHeight: 500\n    },\n    '@media screen and (max-width: 680px)': {\n        dropZone: {\n            width: 'calc(100% - 45px)',\n            minWidth: 200,\n        },\n        imgStyle: {\n            width: '100%',\n        }\n    }\n});\n\nclass Background extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgSRC: '',\n            toast: ''\n        };\n    }\n\n    componentDidMount() {\n        this.readFile();\n    }\n\n    readFile() {\n        const { socket, instance } = this.props;\n\n        socket.getRawSocket().emit('readFile', `web.${instance}`, 'login-bg.png', (err, data) => {\n            if (!err && data) {\n                let arrayBufferView = new Uint8Array(data);\n                if (!arrayBufferView.length) {\n                    this.setState({ imgSRC: `../../files/web.${instance}/login-bg.png?ts=` + Date.now() });\n                } else {\n                    let blob = new Blob([arrayBufferView], { type: 'image/png' });\n                    let urlCreator = window.URL || window.webkitURL;\n                    let imgSRC = urlCreator.createObjectURL(blob);\n                    this.setState({ imgSRC });\n                }\n            } else {\n                this.setState({ imgSRC: '' });\n            }\n        });\n    }\n\n    uploadFile(file, callback) {\n        const { socket, instance } = this.props;\n        if (!file) return;\n        if (file.size > 5 * 1024 * 1024) {\n            this.setState({ toast: `File ${file.name} is too big. Maximum 5MB` });\n            this.setState({ imgSRC: '' });\n            callback && callback('');\n            return;\n        }\n        let reader = new FileReader();\n        reader.onload = ({ target: { result } }) => {\n            socket.getRawSocket().emit('writeFile', `web.${instance}`, 'login-bg.png', result, () => {\n                this.readFile();\n            });\n        };\n        callback && callback(file.name);\n        reader.readAsArrayBuffer(file);\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        const { imgSRC, toast } = this.state;\n        return <form className={classes.tab}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <div>\n                    <CustomInput\n                        styleComponentBlock={{ height: 20, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                        component={<CustomInput\n                            attr='loginBackgroundColorHelper'\n                            type='color'\n                            style={{ marginTop: -1, marginLeft: 10, minWidth: 60 }}\n                            native={native}\n                            onChange={async (e, value) => {\n                                await onChange('loginBackgroundColorHelper', value);\n                                await onChange('loginBackgroundColor', value);\n                            }}\n                            variant=\"outlined\"\n                            size=\"small\"\n                        />}\n                        title='color'\n                        attr='loginBackgroundColor'\n                        style={{ marginTop: -1, marginBottom: 20 }}\n                        native={native}\n                        onChange={async (e, value) => {\n                            await onChange('loginBackgroundColorHelper', value);\n                            await onChange('loginBackgroundColor', value);\n                        }}\n                    />\n                </div>\n                <div>\n                    <CustomCheckbox\n                        title='background_image'\n                        attr='loginBackgroundImage'\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['loginBackgroundImage'] ? { display: 'block' } : { display: 'none' }}>\n                    <div>\n                        <CustomButtonUpload\n                            title=\"upload_image\"\n                            attr=\"files\"\n                            native={native}\n                            onChange={(e, callback) => this.uploadFile(e, callback)}\n                        />\n                    </div>\n                    <Dropzone\n                        accept=\"image/*\"\n                        onDrop={acceptedFiles => this.uploadFile(acceptedFiles[0])}>\n                        {({ getRootProps, getInputProps, isDragActive }) => (\n                            <section>\n                                <div\n                                    className={`${classes.dropZone} ${isDragActive ? classes.dropZoneActive : null}`}\n                                    {...getRootProps()}>\n                                    <input {...getInputProps()}/>\n                                    <p>{I18n.t('place_the_files_here')}</p>\n                                    {imgSRC ? <img className={classes.imgStyle} src={imgSRC} alt=\"img\" /> : null}\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nBackground.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport I18n from '@iobroker/adapter-react/i18n';\n\nimport CustomCheckbox from '../Components/CustomCheckbox';\nimport {TextField} from \"@material-ui/core\";\n\nconst styles = theme => ({\n    tab: {\n        width: '100%',\n        minHeight: '100%'\n    },\n    column: {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        marginRight: 20\n    },\n    columnSettings: {\n        width: 'calc(100% - 10px)'\n    },\n    fontSize: {\n        '@media screen and (max-width: 460px)': {\n            '& > *': {\n                fontSize: '3.2vw',\n            }\n        }\n    }\n});\n\nclass Additionally extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toast: '',\n            ipAddressOptions: []\n        };\n    }\n\n    render() {\n        const { classes, native, onChange } = this.props;\n        return <form className={classes.tab}>\n            <div className={`${classes.column} ${classes.columnSettings}`}>\n                <h4>\n                {I18n.t('disable_default')}\n                </h4>\n                <p>\n                {I18n.t('warning_incorrectly')}\n                </p>\n                <div>\n                    <CustomCheckbox\n                        title='disable_extensions'\n                        attr='disableExtensions'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='disable_states'\n                        attr='disableStates'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <div style={native['leEnabled'] ? { display: 'block' } : { display: 'none' }}>\n                    <CustomCheckbox\n                        title='disable_files'\n                        attr='disableFilesObjects'\n                        className={classes.fontSize}\n                        native={native}\n                        onChange={onChange}\n                    />\n                </div>\n                <h4>\n                    {I18n.t('Redirect options')}\n                </h4>\n                <div>\n                    <TextField\n                        value={native.defaultRedirect || ''}\n                        onChange={async e => await onChange('defaultRedirect', e.target.value)}\n                        label={I18n.t('defaultRedirect')}\n                        helperText={I18n.t('This path will be opened if no path specified')}\n                    />\n                </div>\n            </div>\n        </form>;\n    }\n}\n\nAdditionally.propTypes = {\n    common: PropTypes.object.isRequired,\n    native: PropTypes.object.isRequired,\n    instance: PropTypes.number.isRequired,\n    adapterName: PropTypes.string.isRequired,\n    onError: PropTypes.func,\n    onLoad: PropTypes.func,\n    onChange: PropTypes.func,\n    changed: PropTypes.bool,\n    socket: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Additionally);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\nimport Loader from '@iobroker/adapter-react/Components/Loader'\nimport I18n from '@iobroker/adapter-react/i18n';\nimport Options from './Tabs/Options';\nimport Certificates from './Tabs/Certificates';\nimport WhiteList from './Tabs/WhiteList';\nimport Background from './Tabs/Background';\nimport Additionally from './Tabs/Additionally';\nimport Toast from './Components/Toast';\n\nconst styles = theme => ({\n    root: {},\n    tabContent: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px)',\n        overflow: 'auto'\n    },\n    tabContentIFrame: {\n        padding: 10,\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\n        overflow: 'auto'\n    }\n});\n\nconst arrayTabName = [{\n    name: 'options',\n    translate: 'main_settings',\n    index: 0\n}, {\n    name: 'certificates',\n    translate: 'certificates',\n    index: 1\n}, {\n    name: 'whiteList',\n    translate: 'whiteList',\n    index: 2\n}, {\n    name: 'additionally',\n    translate: 'additionally',\n    index: 3\n}, {\n    name: 'background',\n    translate: 'background',\n    index: 4\n}]\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = { ...props };\n        extendedProps.encryptedFields = ['pass'];\n        extendedProps.translations = {\n            'en': require('./i18n/en'),\n            'de': require('./i18n/de'),\n            'ru': require('./i18n/ru'),\n            'pt': require('./i18n/pt'),\n            'nl': require('./i18n/nl'),\n            'fr': require('./i18n/fr'),\n            'it': require('./i18n/it'),\n            'es': require('./i18n/es'),\n            'pl': require('./i18n/pl'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n        super(props, extendedProps);\n    }\n\n    getSelectedTab() {\n        const { selectedTab } = this.state;\n        const tab = selectedTab;\n        if (tab) {\n            return arrayTabName.find((el) => el.name === tab)?.index || 0;\n        } else {\n            return 0;\n        }\n    }\n\n    onPrepareSave(settings) {\n        super.onPrepareSave(settings);\n        const { secure, certPublic, certPrivate } = this.state.native;\n\n        if (secure && (!certPrivate || !certPublic)) {\n            this.setState({ toast: 'set_certificates' });\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    renderTab() {\n        const { selectedTab, native } = this.state;\n        switch (selectedTab) {\n            case 'options':\n            default:\n                return <Options\n                    key=\"options\"\n                    themeType={this.state.themeType}\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'certificates':\n                return <Certificates\n                    key=\"certificates\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'whiteList':\n                return <WhiteList\n                    key=\"whiteList\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'additionally':\n                return <Additionally\n                    key=\"additionally\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n\n            case 'background':\n                return <Background\n                    key=\"background\"\n                    common={this.common}\n                    socket={this.socket}\n                    native={native}\n                    onChange={(attr, value) => this.updateNativeValue(attr, value)}\n                    onError={text => this.setState({ errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text })}\n                    instance={this.instance}\n                    adapterName={this.adapterName}\n                />;\n        }\n    }\n\n    checkDisabledTabs(nameTab) {\n        const { native } = this.state;\n        return (!native['auth'] && nameTab === 'background') ||\n            (!native['secure'] && nameTab === 'certificates') ||\n            (!native['auth'] && nameTab === 'whiteList');\n    }\n\n    render() {\n        const { loaded, theme, themeType, toast } = this.state;\n        const { classes } = this.props;\n        if (!loaded) {\n            return <MuiThemeProvider theme={theme}>\n                <Loader theme={themeType} />\n            </MuiThemeProvider>;\n        }\n\n        return <MuiThemeProvider theme={theme}>\n            <Toast message={toast} onClose={() => this.setState({ toast: '' })} />\n            <div className=\"App\" style={{ background: theme.palette.background.default, color: theme.palette.text.primary }}>\n                <AppBar position=\"static\">\n                    <Tabs\n                        value={this.getSelectedTab()}\n                        onChange={(e, index) => {\n                            this.selectTab(arrayTabName.find((el) => el.index === index)?.name || arrayTabName[0].name, index)\n                        }} scrollButtons=\"auto\"\n                    >\n                        {arrayTabName.map((el, index) =>\n                            <Tab key={`${index}-tab-key`} disabled={this.checkDisabledTabs(el.name)} label={I18n.t(el.translate)} data-name={el.name} />)}\n                    </Tabs>\n                </AppBar>\n                <div className={this.isIFrame ? classes.tabContentIFrame : classes.tabContent}>\n                    {this.renderTab()}\n                </div>\n                {this.renderError()}\n                {this.renderSaveCloseButtons()}\n            </div>\n        </MuiThemeProvider>;\n    }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport { MuiThemeProvider} from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {version} from '../package.json';\nimport theme from '@iobroker/adapter-react/Theme';\nimport Utils from '@iobroker/adapter-react/Components/Utils';\n\nwindow.adapterName = 'web';\nlet themeName = Utils.getThemeName();\n\n\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\n\nfunction build() {\n    return ReactDOM.render(\n        <MuiThemeProvider theme={theme(themeName)}>\n            <App\n                onThemeChange={_theme => {\n                    themeName = _theme;\n                    build();\n                }}\n            />\n        </MuiThemeProvider>,\n        document.getElementById('root')\n    );\n}\n\nif (window.location.host !== 'localhost:3000') {\n    Sentry.init({\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\n        release: 'iobroker.' + window.adapterName + '@' + version,\n        integrations: [\n            new SentryIntegrations.Dedupe()\n        ]\n    });\n}\n\nbuild();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}