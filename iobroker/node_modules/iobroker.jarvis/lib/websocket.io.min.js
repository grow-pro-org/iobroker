const _crypto=require("crypto");const _fs=require("fs");const _path=require("path");const _got=require("got");const{Server}=require("socket.io");const EventEmitter=require("events");const _ip=require("ip");const _uuid=require("uuid").v5;const _hash=require("object-hash");const _semver=require("semver");const _os=require("os");const _platform=require("platform");const log=(e,t,s)=>{t=typeof t!=="string"?JSON.stringify(t):t;if(e){e[s]?e[s](t):e(t)}};const console={debug:(e,t)=>log(e,t,"debug"),log:(e,t)=>log(e,t,"info"),info:(e,t)=>log(e,t,"info"),warn:(e,t)=>log(e,t,"warn"),error:(e,t)=>log(e,t,"error")};class ioWebSocket extends EventEmitter{constructor(e=null,t={}){super();if(!e){throw new Error("No adapter instance passed to WebSocket constructor!")}this._adapter=e;this._options=t||{};if(this._options.user&&this._options.user.indexOf("system.user.")===-1){this._options.user="system.user."+this._options.user}this._options.port=t.port||8400;this._options.certificates=t.certificates||null;this.server=null;this.wss=null;this.clients={};this.sockets={};this.connect();this.cache={};this._adapter.requireLog(true);this._adapter.subscribeForeignStates("*");this.getAdapterInstances();this.updateAdapterInstances();this._adapter.getForeignState("admin.0.info.updatesJson",(e,t)=>{if(!e&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}this.getAdapterInstances()}});this._adapter.on("stateChange",(e,t)=>{if(e.startsWith("javascript.0.scriptEnabled.")&&t&&t.ack===true){this.getScriptStatuses()}else if(e==="admin.0.info.updatesJson"&&t){try{this.cache["AdapterUpdates"]=JSON.parse(t.val)}catch(e){delete this.cache["AdapterUpdates"]}}})}getScriptStatuses(){this.cache["ScriptStatuses"]=this.cache["ScriptStatuses"]||{hash:null,data:{}};this._adapter.getObjectView("system","script",null,(e,t)=>{const r={};t.rows=t.rows||[];t.rows.forEach(e=>{const t=e.id.replace("script.js.","");const s=t.substr(0,t.lastIndexOf("."));const i=t.substr(0,t.indexOf("."));e=e.value;e.disabled=!e.enabled;delete e.common.source;r[s]=r[s]||{id:s,children:[]};r[s].children.push({...e.common,created:e.ts,id:t});r[s].children.sort((e,t)=>e.id.toLowerCase()===t.id.toLowerCase()?0:e.id.toLowerCase()>t.id.toLowerCase()?1:-1)});let i={};Object.keys(r).sort().reverse().forEach(e=>{const t=e.indexOf(".")===-1;if(t){i={[e]:r[e],...i}}else{const s=e.substr(0,e.lastIndexOf("."));r[s]=r[s]||{id:s,children:[]};r[s].children=[].concat(r[e],r[s].children)}});const s=_hash(i);if(this.cache["ScriptStatuses"].hash!==s){console.debug(this._adapter.log,"Push update of scripts..");this.cache["ScriptStatuses"]={hash:s,data:i};for(const n in this.sockets){if(this.sockets[n]._subscribeOthers&&this.sockets[n]._subscribeOthers["ScriptStatuses"]){this.sockets[n]._subscribeOthers["ScriptStatuses"].forEach(e=>{this.sockets[n].emit(e,i)})}}}})}getAdapterInstances(){this.cache["AdapterInstances"]=this.cache["AdapterInstances"]||{hash:null,data:{}};this._adapter.getObjectView("system","instance",{startkey:"system.adapter.",endkey:"system.adapter.é¦™"},(e,t)=>{const a={};if(!e&&t&&t.rows){t.rows.forEach(async e=>{const t=e.id.replace("system.adapter.","");a[t]={...e.value.common,_id:e.id,id:t};const s=await this._adapter.getForeignStateAsync(e._id+".alive");const i=await this._adapter.getForeignStateAsync(e._id+".connected");const r=await this._adapter.getForeignStateAsync(t+".info.connection");a[t].alive=s?s.val:null;a[t].connectedToHost=i?i.val:null;a[t].connectedToInstance=r?r.val:null;const n=this.cache["AdapterUpdates"]&&this.cache["AdapterUpdates"][a[t].name]&&this.cache["AdapterUpdates"][a[t].name].availableVersion||a[t].version;a[t].update=n&&a[t].version&&_semver.gt(n,a[t].version)===true?n:null;delete a[t].docs;delete a[t].news});const s=Object.keys(a).sort().reduce((e,t)=>{e[t]=a[t];return e},{});const i=_hash(s);if(this.cache["AdapterInstances"].hash!==i){console.debug(this._adapter.log,"Push update of instances..");this.cache["AdapterInstances"]={hash:i,data:s};for(const r in this.sockets){if(this.sockets[r]._subscribeOthers&&this.sockets[r]._subscribeOthers["AdapterInstances"]){this.sockets[r]._subscribeOthers["AdapterInstances"].forEach(e=>{this.sockets[r].emit(e,s)})}}}}})}updateAdapterInstances(){this.intervalInstancesRefresh=setInterval(()=>{this.getAdapterInstances();this.getScriptStatuses()},30*1e3)}eventFromClient(e){const t=e.clientId;if(e.event==="disconnect"){console.log(this._adapter.log,"Client with IP "+(this.clients[t]?this.clients[t].ip:"(unknown)")+" disconnected.");delete this.clients[t];delete this.sockets[t];this.emit("CLIENT_LIST",this.clients)}else if(e.event==="clients"){const{event:s,...i}=e;this.clients[e.id]={...i,ts:Date.now()};this.emit("CLIENT_LIST",this.clients)}else if(e.event==="getAdapterInstances"||e.event==="getScriptStatuses"){const r=e.event.replace("get","");if(this.sockets[t]&&this.sockets[t]._subscribeOthers&&this.sockets[t]._subscribeOthers[r]&&this.cache[r]){this.sockets[t]._subscribeOthers[r].forEach(e=>{this.sockets[t].emit(e,this.cache[r].data)})}}}connect(){const e=_ip.address();const t=_os.hostname();console.debug(this._adapter.log,"Connection: ioBroker host detected with "+t+" (IP: "+e+").");const s=(e,t)=>{t.writeHead(501);t.end("This is the jarvis socket.io port!")};if(this._options.certificates!==null){const r={...this._options.certificates,allowHTTP1:true};this.server=require("http2").createSecureServer(r,s);console.debug(this._adapter.log,"Connection: Using secure HTTPS-Server")}else{this.server=require("http").createServer(s);console.debug(this._adapter.log,"Connection: Using non-secure HTTP-Server")}let i=this._adapter.config.hostWhitelist?this._adapter.config.hostWhitelist.replace(/, /g,",").split(","):[];i=i.concat(["localhost","127.0.0.1",e,t]);console.debug(this._adapter.log,"Connection: Using options: "+JSON.stringify(this._options.connection||{}));this.wss=new Server({path:"/jarvis-socket/",allowEIO3:true,pingInterval:12e4,pingTimeout:3e4,...this._options.connection||{},cors:{origin:(t,e)=>{t=t||"(direct access to the port)";console.debug(this._adapter.log,"Connection: Origin detected with "+t+"...");const s=!this._options.hostAllow||this._options.hostAllow==="all"||this._options.hostAllow==="list"&&t&&i.some(e=>t.indexOf(e)>-1);if(s){console.debug(this._adapter.log,"Connection: Origin detected with "+t+" (allowed due to "+(this._options.hostAllow||"all")+")");return e(null,t)}console.debug(this._adapter.log,"Connection: Origin detected with "+t+" (rejected, not in "+i.join(", ")+")");return e("Access from domain not allowed")}}});this.wss.attach(this.server);this.wss.on("error",e=>{console.error(this._adapter.log,e.message||e);console.debug(this._adapter.log,e)});this.wss.on("connection",e=>{console.debug(this._adapter.log,"Client connecting...");const t=e.request.headers["user-agent"];const s=_platform.parse(t);const i=s.name;const r=e.conn.remoteAddress.indexOf(":")!==-1?e.conn.remoteAddress.substr(e.conn.remoteAddress.lastIndexOf(":")+1):e.conn.remoteAddress;const n=r.replace(/\./g,"-")+"_"+i.replace(/ /g,"-");const a=_uuid(n,"d03b9915-564d-491e-a0e0-7ef4af0a52d1");this.clients[a]={userAgent:t,userPlatform:s,userBrowser:i,ip:r,ns:n,id:a,ts:Date.now()};this.sockets[a]=new ioWebSocketClient(this._adapter,this._options,this.clients[a],e,e=>this.eventFromClient(e));this.emit("CLIENT_NEW",this.clients[a]);this.emit("CLIENT_LIST",this.clients);console.log(this._adapter.log,"Client with IP "+(this.clients[a]?this.clients[a].ip:"(unknown)")+" connected.")});this.server.listen(this._options.port,"0.0.0.0",()=>{console.log(this._adapter.log,"Connection: WebSocket opened on port "+this.server.address().port+(this._options.certificates!==null?" using https":" using http")+"...")})}}class ioWebSocketClient{constructor(e,t,s,i,r){this._adapter=e;this._options=t;this._parentMessage=r;console.debug(this._adapter.log,"Websocket-Handler for client initialized");this._client=s;this._socket=i;this._isAlive=Date.now();this._adapter.setObject("clients."+this._client.ns,{type:"device",common:{name:this._client.ip},native:{}},()=>this.updateStates());this.emit("_client",this._client);this.emit("_version",this._adapter.version);this._socket.on("ping",()=>this.heartbeat());const a={};this._socket.on("message",e=>{try{const{messageId:t,index:s,length:i,chunk:r}=e;a[t]=a[t]||{};a[t][s]=r;if(Object.keys(a[t]).length===i){const n=Object.values(a[t]).join("");this.handleMessage(n);delete a[t]}}catch(e){this.error();console.warn(this._adapter.log,e.message||e)}});this._socket.on("disconnect",e=>this.disconnect(e));this._subscribeOthers={};this._subscribeStates={};this._subscribeHistory={};this._adapter.on("stateChange",(e,t)=>this.handleStateChange(e,t));this._adapter.on("log",e=>this.handleLogChange(e));this.intervalClientTimeout=setInterval(()=>{if(this._isAlive&&this._isAlive<Date.now()-30*1e3){this.disconnect("Client timeout")}},60*1e3);this.intervalHistoryRefresh=setInterval(()=>{for(const t in this._subscribeHistory){const{messageId:s,stateId:i,options:e}=this._subscribeHistory[t];this.getHistory(s,t,i,e)}},2*60*1e3)}disconnect(e){this._isAlive=0;console.debug(this._adapter.log,"Client with IP "+(this._client?this._client.ip:"(unknown)")+" disconnecting: "+e);this._adapter.setState("clients."+this._client.ns+".connected",false,true);clearInterval(this.intervalClientTimeout);clearInterval(this.intervalHistoryRefresh);this._parentMessage({clientId:this._client.id,event:"disconnect"})}updateStates(){const o={connected:{name:"Indicates client connection",role:"indicator.connected",type:"boolean",value:true},ip:{name:"Client IP",role:"info.ip",type:"string",value:this._client.ip},id:{name:"Client ID",role:"text",type:"string",value:this._client.id},userAgent:{name:"Client User Agent",role:"text",type:"string",value:this._client.userAgent},userPlatform:{name:"Client Platform Information",role:"text",type:"json",value:this._client.userPlatform},userBrowser:{name:"Client Browser",role:"text",type:"string",value:this._client.userBrowser},lastSeen:{name:"Client Last Seen",role:"value.time",type:"number",value:Date.now()}};Object.keys(o).forEach(e=>{const s="clients."+this._client.ns+"."+e;const{role:t,type:i,value:r,initial:n,subscribe:a}=o[e];this._adapter.setObjectNotExists(s,{type:"state",common:{role:t,type:i},native:{}},(e,t)=>{if(t&&n||r!==undefined){this._adapter.setState(s,typeof r==="object"?JSON.stringify(r,null,3):r,true)}})});const e="clients."+this._client.ns+".setTabId";this._adapter.setObjectNotExists(e,{type:"state",common:{role:"text",type:"string",write:true},native:{}},()=>{});this._parentMessage({...this._client,event:"clients"})}heartbeat(){this._socket.emit("pong");this._isAlive=Date.now();this.updateStates()}handleLogChange(e){this.emit("_log",e)}handleStateChange(t,s){if(this._subscribeStates&&this._subscribeStates[t]&&Array.isArray(this._subscribeStates[t])){this._subscribeStates[t].forEach(e=>this.emit(e,s&&s.ack!==undefined&&s.ts!==undefined&&s.from!==undefined?{state:s}:{err:new Error(t+" is not a valid state")}))}else if(t&&t.indexOf("."+this._client.ns+".")!==-1&&t.endsWith(".setTabId")&&s&&s.val&&s.ack!==true){this.emit("_setTabId",s.val)}}handleMessage(i){try{const r=JSON.parse(i);let{messageId:e,command:t,params:s=[]}=r;s=Array.isArray(s)?s:[s];t&&this[t](e,...s)}catch(e){console.warn(this._adapter.log,e.message||e);console.debug(this._adapter.log,i)}}emit(s,e={},i="message"){this._adapter.log.silly("Send message with ID "+s);if(e.err){e.err={name:e.err.name,message:e.err.message,stack:e.err.stack}}else if(e.err===null){e.err="_isNull"}const t=JSON.stringify(e).match(/.{1,100000}/g);const r=t.length;t.forEach((e,t)=>{this._socket.emit(i,{messageId:s,index:t,length:r,chunk:e})})}log(e,t,s){const i=s.map(e=>{return typeof e==="object"?JSON.stringify(e):e});this._adapter.log[t||"info"](i.join(", "));this.emit(e)}getLogs(s,e="current"){const t=this._adapter.systemConfig.log.transport.file1;const i=_path.resolve(this._adapter.systemConfig.dataDir+"../"+t.filename+"."+e+""+t.fileext);_fs.readFile(i,"utf-8",(e,t)=>{if(e){this.emit(s,{err:e});return}const o=t.substr(0,4);t=t.split("\n"+o);t=t.map((t,e)=>{t=e?o+t:t;const s=t.indexOf(": ")+2;const i=t.substr(s).indexOf("host")===-1?t.substr(s,t.indexOf(" (")-s):t.substr(s,t.indexOf(" ",s)-s);const r=new Date(t.substr(0,23)).getTime();const n=["silly","debug","info","warn","error"].find(e=>t.indexOf(e)!==-1);const a=t.substr(s).replace(/(?:\r\n|\r|\n)/g," ");return{from:i,ts:r,severity:n,message:a}});t=t.reverse();this.emit(s,{err:null,logs:t})})}getConfig(e){this.emit(e,{config:this._adapter.config})}readFile(s,e){e=_path.resolve(e.replace("{dirname}",__dirname));_fs.readFile(e,"utf-8",(e,t)=>{this.emit(s,{err:e,data:t})})}sign(e,t,s,i="RSA-SHA512"){t=typeof t!=="string"?JSON.stringify(t):t;let r=null;let n=null;try{const a=crypto.createSign(i);a.update(t);n=a.sign(s,"base64")}catch(e){console.warn(this._adapter.log,e.message||e);r=e}this.emit(e,{err:r,data:t,privateKey:s,signature:n,algorithm:i,verification:verification})}verify(e,t,s,i,r="RSA-SHA512"){t=typeof t!=="string"?JSON.stringify(t):t;let n=null;let a=false;try{a=_crypto.verify(r,Buffer.from(t),i,Buffer.from(s,"base64"))}catch(e){console.warn(this._adapter.log,e.message||e);n=e}this.emit(e,{err:n,data:t,publicKey:i,signature:s,algorithm:r,verification:a})}encrypt(e,t,s,i="AES-256-CTR"){let r=null;let n=null;try{const a=_crypto.randomBytes(16).toString("hex").substr(0,16);const o=_crypto.createCipheriv(i,_crypto.createHash("sha256").update(s).digest("hex").substr(0,32),a);n=Buffer.from(a).toString("base64").substr(0,24)+":"+o.update(typeof t==="object"?JSON.stringify(t):t,"utf8","base64")+o.final("base64")}catch(e){console.warn(this._adapter.log,e.message||e);r=e}this.emit(e,{err:r,str:t,encrypted:n})}decrypt(e,t,s,i="AES-256-CTR"){let r=null;let n=null;try{const[a,o]=t.split(":");const c=_crypto.createDecipheriv(i,_crypto.createHash("sha256").update(s).digest("hex").substr(0,32),Buffer.from(a,"base64"));n=Buffer.concat([c.update(Buffer.from(o,"base64")),c.final()]).toString()}catch(e){console.warn(this._adapter.log,e.message||e);r=e}this.emit(e,{err:r,hash:t,decrypted:n})}request(t,s){try{if(s._encrypt&&s.body.data){s.body.data=encrypt(s.body.data,"KutTGsNQ8HCX$hrT9Ua5beRSs2BLVeQq");delete s._encrypt}if(s.json===true&&s.body){s.json=s.body;delete s.body}_got(s).then(e=>{this.emit(t,{_options:s,data:e.body||""})}).catch(e=>{this.emit(t,{err:e});console.warn(this._adapter.log,e.message||er)})}catch(e){this.emit(t,{err:e});console.warn(this._adapter.log,e.message||e)}}setAdapter(s,i,r,e){i="system.adapter."+i;this._adapter.getForeignObject(i,(e,t)=>{if(e||!t){this.emit(s,{err:e});return}t.common.enabled=r;this._adapter.setForeignObject(i,t,e=>{this._parentMessage("getAdapterInstances");this.emit(s,{err:e})})})}setScript(e,t,s,i){this.setState(e,"javascript.0.scriptEnabled."+t,s,i)}setState(t,e,s,i,r=null){this._adapter.setForeignState(e,s,i||false,{user:this._options.user},e=>{this.emit(t,{err:e});r&&r()})}getSpecial(e){this._parentMessage({clientId:this._client.id,event:"get"+e})}subscribeSpecial(e,t){this._subscribeOthers[t]=this._subscribeOthers[t]||[];if(this._subscribeOthers[t].indexOf(e)===-1){this._subscribeOthers[t].push(e)}this.getSpecial(t)}getObject(s,i){this._adapter.getForeignObject(i,(e,t)=>{t={...t||{},id:i};this.emit(s,{err:e,object:t})})}getObjects(t,i){let s=[];["device","channel","state"].forEach(e=>{s.push(new Promise(s=>{this._adapter.getForeignObjects(i||"*",e,(e,t)=>s({err:e,objects:t}))}))});let r=null;let n={};Promise.all(s).then(e=>{e.forEach(e=>{r=r||e.err;n={...n,...e.objects}});Object.keys(n).forEach(e=>{const t=e.substr(0,e.indexOf(".",e.indexOf(".")+1));if(t&&!n[t]){n[t]={_id:t,type:"adapter"}}if(e.indexOf("system.adapter")>-1||e.indexOf("system.host")>-1||e.indexOf(".")===-1){delete n[e]}});this.emit(t,{err:r,objects:n})})}getObjectView(s,e,t,i,r){this._adapter.getObjectView(e,t,i,(e,t)=>{this.emit(s,{err:e,objects:t&&t.rows||[]})})}getState(s,i){this._adapter.getForeignState(i,{user:this._options.user},(e,t)=>{if(!e&&(!t||t&&t.ack===undefined&&t.ts===undefined&&t.from===undefined)){e=new Error(i+" is not a valid state")}this.emit(s,{err:e,state:t})})}getStates(s,e){this._adapter.getForeignStates(e,{user:this._options.user},(e,t)=>{this.emit(s,{err:e,states:t})})}unsubscribe(e,t,s,i){console.debug(this._adapter.log,"unsubscribe ("+i+"): "+s+" | "+t);if(t==="history"&&s&&this._subscribeHistory[s]){delete this._subscribeHistory[s];this.emit(e,{subscriptionKey:s,type:t,stateId:i,err:null})}else if(t==="state"&&i&&this.subscribeState[i]){delete this.subscribeState[i];this.emit(e,{subscriptionKey:s,type:t,stateId:i,err:null})}else{this.emit(e,{subscriptionKey:s,stateId:i,err:"Not found"})}}subscribeState(e,t){this._subscribeStates[t]=this._subscribeStates[t]||[];if(this._subscribeStates[t].indexOf(e)===-1){this._subscribeStates[t].push(e)}this.getState(e,t)}subscribeHistory(e,t,s,i){console.debug(this._adapter.log,"subscribeHistory ("+s+"): "+t+" | "+JSON.stringify(i));if(!this._subscribeHistory[t]){this._subscribeHistory[t]={subscriptionKey:t,messageId:e,stateId:s,options:i};this.getHistory(e,t,s,{...i,force:true})}else{this.emit(e,{subscriptionKey:t,err:null,hash:this._subscribeHistory[t].hash,history:this._subscribeHistory[t].history})}}getHistory(i,r,n,a={}){console.debug(this._adapter.log,"getHistory ("+n+"): "+r+" | "+JSON.stringify(a));a.start=a.start||Date.now()-a.review;a.end=a.end||Date.now();a.instance=a.instance||"history.0";Promise.allSettled([this._adapter.getForeignStateAsync("system.adapter."+a.instance+".alive"),this._adapter.getForeignStateAsync("system.adapter."+a.instance+".connected")]).then(e=>{const t=!e.some(e=>e.status!=="fulfilled"||(!e.value||e.value&&e.value.val!==true));if(!t){throw new Error(a.instance+" not reachable")}return t}).then(()=>{this._adapter.getHistory(n,a,(e,t)=>{if(!e&&t){const s=t.length;if(this._subscribeHistory[r]&&(a.force===true||s!==this._subscribeHistory[r].hash)){console.debug(this._adapter.log,"getHistory ("+n+"): Update");this._subscribeHistory[r].history=t;this._subscribeHistory[r].hash=s;this.emit(i,{subscriptionKey:r,err:e,hash:s,history:t})}else{this.emit(i,{subscriptionKey:r,err:e,hash:s,history:null,noUpdate:true})}}else{this.emit(i,{subscriptionKey:r,err:e,hash:null,history:null})}})}).catch(e=>{this.emit(i,{subscriptionKey:r,err:e,hash:null,history:null})})}getSystemInformation(e){this.emit(e,{hostname:_os.hostname(),architecture:_os.arch(),platform:_os.platform(),release:_os.release()})}}module.exports=ioWebSocket;